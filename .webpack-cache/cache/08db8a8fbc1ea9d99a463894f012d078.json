{"remainingRequest":"/Users/shanebeal/Desktop/bodewiki/node_modules/babel-loader/lib/index.js??ref--0-1!/Users/shanebeal/Desktop/bodewiki/client/libs/codemirror-merge/diff-match-patch.js","dependencies":[{"path":"/Users/shanebeal/Desktop/bodewiki/client/libs/codemirror-merge/diff-match-patch.js","mtime":1742769082000},{"path":"/Users/shanebeal/Desktop/bodewiki/.babelrc","mtime":1742797763162},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/cache-loader/dist/cjs.js","mtime":1742797622487},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/babel-loader/lib/index.js","mtime":1742797622325}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}