{"remainingRequest":"/Users/shanebeal/Desktop/bodewiki/node_modules/babel-loader/lib/index.js??ref--0-1!/Users/shanebeal/Desktop/bodewiki/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanebeal/Desktop/bodewiki/client/components/profile/profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanebeal/Desktop/bodewiki/client/components/profile/profile.vue","mtime":1742851626000},{"path":"/Users/shanebeal/Desktop/bodewiki/.babelrc","mtime":1742797763162},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/cache-loader/dist/cjs.js","mtime":1743632217742},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/babel-loader/lib/index.js","mtime":1743632218430},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/vue-loader/lib/index.js","mtime":1743632218723}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:import _cloneDeep from "lodash/cloneDeep";
import _delay from "lodash/delay";
import _last from "lodash/last";
import _head from "lodash/head";
import _find from "lodash/find";
import _get from "lodash/get";
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

import { get } from 'vuex-pathify';
import Cookies from 'js-cookie';
import validate from 'validate.js';
import PasswordStrength from '../common/password-strength.vue';

/* global WIKI, siteConfig */

export default {
  i18nOptions: {
    namespaces: ['profile', 'auth']
  },
  components: {
    PasswordStrength: PasswordStrength
  },
  data: function data() {
    return {
      saveLoading: false,
      changePassLoading: false,
      user: {
        name: 'unknown',
        location: '',
        jobTitle: '',
        timezone: '',
        dateFormat: '',
        appearance: '',
        createdAt: '1970-01-01',
        updatedAt: '1970-01-01',
        lastLoginAt: '1970-01-01',
        groups: []
      },
      currentPass: '',
      newPass: '',
      verifyPass: '',
      editPop: {
        name: false,
        location: false,
        jobTitle: false,
        timezone: false,
        dateFormat: false,
        appearance: false
      },
      timezones: [{
        text: '(GMT-11:00) Niue',
        value: 'Pacific/Niue'
      }, {
        text: '(GMT-11:00) Pago Pago',
        value: 'Pacific/Pago_Pago'
      }, {
        text: '(GMT-10:00) Hawaii Time',
        value: 'Pacific/Honolulu'
      }, {
        text: '(GMT-10:00) Rarotonga',
        value: 'Pacific/Rarotonga'
      }, {
        text: '(GMT-10:00) Tahiti',
        value: 'Pacific/Tahiti'
      }, {
        text: '(GMT-09:30) Marquesas',
        value: 'Pacific/Marquesas'
      }, {
        text: '(GMT-09:00) Alaska Time',
        value: 'America/Anchorage'
      }, {
        text: '(GMT-09:00) Gambier',
        value: 'Pacific/Gambier'
      }, {
        text: '(GMT-08:00) Pacific Time',
        value: 'America/Los_Angeles'
      }, {
        text: '(GMT-08:00) Pacific Time - Tijuana',
        value: 'America/Tijuana'
      }, {
        text: '(GMT-08:00) Pacific Time - Vancouver',
        value: 'America/Vancouver'
      }, {
        text: '(GMT-08:00) Pacific Time - Whitehorse',
        value: 'America/Whitehorse'
      }, {
        text: '(GMT-08:00) Pitcairn',
        value: 'Pacific/Pitcairn'
      }, {
        text: '(GMT-07:00) Mountain Time',
        value: 'America/Denver'
      }, {
        text: '(GMT-07:00) Mountain Time - Arizona',
        value: 'America/Phoenix'
      }, {
        text: '(GMT-07:00) Mountain Time - Chihuahua, Mazatlan',
        value: 'America/Mazatlan'
      }, {
        text: '(GMT-07:00) Mountain Time - Dawson Creek',
        value: 'America/Dawson_Creek'
      }, {
        text: '(GMT-07:00) Mountain Time - Edmonton',
        value: 'America/Edmonton'
      }, {
        text: '(GMT-07:00) Mountain Time - Hermosillo',
        value: 'America/Hermosillo'
      }, {
        text: '(GMT-07:00) Mountain Time - Yellowknife',
        value: 'America/Yellowknife'
      }, {
        text: '(GMT-06:00) Belize',
        value: 'America/Belize'
      }, {
        text: '(GMT-06:00) Central Time',
        value: 'America/Chicago'
      }, {
        text: '(GMT-06:00) Central Time - Mexico City',
        value: 'America/Mexico_City'
      }, {
        text: '(GMT-06:00) Central Time - Regina',
        value: 'America/Regina'
      }, {
        text: '(GMT-06:00) Central Time - Tegucigalpa',
        value: 'America/Tegucigalpa'
      }, {
        text: '(GMT-06:00) Central Time - Winnipeg',
        value: 'America/Winnipeg'
      }, {
        text: '(GMT-06:00) Costa Rica',
        value: 'America/Costa_Rica'
      }, {
        text: '(GMT-06:00) El Salvador',
        value: 'America/El_Salvador'
      }, {
        text: '(GMT-06:00) Galapagos',
        value: 'Pacific/Galapagos'
      }, {
        text: '(GMT-06:00) Guatemala',
        value: 'America/Guatemala'
      }, {
        text: '(GMT-06:00) Managua',
        value: 'America/Managua'
      }, {
        text: '(GMT-05:00) America Cancun',
        value: 'America/Cancun'
      }, {
        text: '(GMT-05:00) Bogota',
        value: 'America/Bogota'
      }, {
        text: '(GMT-05:00) Easter Island',
        value: 'Pacific/Easter'
      }, {
        text: '(GMT-05:00) Eastern Time',
        value: 'America/New_York'
      }, {
        text: '(GMT-05:00) Eastern Time - Iqaluit',
        value: 'America/Iqaluit'
      }, {
        text: '(GMT-05:00) Eastern Time - Toronto',
        value: 'America/Toronto'
      }, {
        text: '(GMT-05:00) Guayaquil',
        value: 'America/Guayaquil'
      }, {
        text: '(GMT-05:00) Havana',
        value: 'America/Havana'
      }, {
        text: '(GMT-05:00) Jamaica',
        value: 'America/Jamaica'
      }, {
        text: '(GMT-05:00) Lima',
        value: 'America/Lima'
      }, {
        text: '(GMT-05:00) Nassau',
        value: 'America/Nassau'
      }, {
        text: '(GMT-05:00) Panama',
        value: 'America/Panama'
      }, {
        text: '(GMT-05:00) Port-au-Prince',
        value: 'America/Port-au-Prince'
      }, {
        text: '(GMT-05:00) Rio Branco',
        value: 'America/Rio_Branco'
      }, {
        text: '(GMT-04:00) Atlantic Time - Halifax',
        value: 'America/Halifax'
      }, {
        text: '(GMT-04:00) Barbados',
        value: 'America/Barbados'
      }, {
        text: '(GMT-04:00) Bermuda',
        value: 'Atlantic/Bermuda'
      }, {
        text: '(GMT-04:00) Boa Vista',
        value: 'America/Boa_Vista'
      }, {
        text: '(GMT-04:00) Caracas',
        value: 'America/Caracas'
      }, {
        text: '(GMT-04:00) Curacao',
        value: 'America/Curacao'
      }, {
        text: '(GMT-04:00) Grand Turk',
        value: 'America/Grand_Turk'
      }, {
        text: '(GMT-04:00) Guyana',
        value: 'America/Guyana'
      }, {
        text: '(GMT-04:00) La Paz',
        value: 'America/La_Paz'
      }, {
        text: '(GMT-04:00) Manaus',
        value: 'America/Manaus'
      }, {
        text: '(GMT-04:00) Martinique',
        value: 'America/Martinique'
      }, {
        text: '(GMT-04:00) Port of Spain',
        value: 'America/Port_of_Spain'
      }, {
        text: '(GMT-04:00) Porto Velho',
        value: 'America/Porto_Velho'
      }, {
        text: '(GMT-04:00) Puerto Rico',
        value: 'America/Puerto_Rico'
      }, {
        text: '(GMT-04:00) Santo Domingo',
        value: 'America/Santo_Domingo'
      }, {
        text: '(GMT-04:00) Thule',
        value: 'America/Thule'
      }, {
        text: '(GMT-03:30) Newfoundland Time - St. Johns',
        value: 'America/St_Johns'
      }, {
        text: '(GMT-03:00) Araguaina',
        value: 'America/Araguaina'
      }, {
        text: '(GMT-03:00) Asuncion',
        value: 'America/Asuncion'
      }, {
        text: '(GMT-03:00) Belem',
        value: 'America/Belem'
      }, {
        text: '(GMT-03:00) Buenos Aires',
        value: 'America/Argentina/Buenos_Aires'
      }, {
        text: '(GMT-03:00) Campo Grande',
        value: 'America/Campo_Grande'
      }, {
        text: '(GMT-03:00) Cayenne',
        value: 'America/Cayenne'
      }, {
        text: '(GMT-03:00) Cuiaba',
        value: 'America/Cuiaba'
      }, {
        text: '(GMT-03:00) Fortaleza',
        value: 'America/Fortaleza'
      }, {
        text: '(GMT-03:00) Godthab',
        value: 'America/Godthab'
      }, {
        text: '(GMT-03:00) Maceio',
        value: 'America/Maceio'
      }, {
        text: '(GMT-03:00) Miquelon',
        value: 'America/Miquelon'
      }, {
        text: '(GMT-03:00) Montevideo',
        value: 'America/Montevideo'
      }, {
        text: '(GMT-03:00) Palmer',
        value: 'Antarctica/Palmer'
      }, {
        text: '(GMT-03:00) Paramaribo',
        value: 'America/Paramaribo'
      }, {
        text: '(GMT-03:00) Punta Arenas',
        value: 'America/Punta_Arenas'
      }, {
        text: '(GMT-03:00) Recife',
        value: 'America/Recife'
      }, {
        text: '(GMT-03:00) Rothera',
        value: 'Antarctica/Rothera'
      }, {
        text: '(GMT-03:00) Salvador',
        value: 'America/Bahia'
      }, {
        text: '(GMT-03:00) Santiago',
        value: 'America/Santiago'
      }, {
        text: '(GMT-03:00) Sao Paulo',
        value: 'America/Sao_Paulo'
      }, {
        text: '(GMT-03:00) Stanley',
        value: 'Atlantic/Stanley'
      }, {
        text: '(GMT-02:00) Noronha',
        value: 'America/Noronha'
      }, {
        text: '(GMT-02:00) South Georgia',
        value: 'Atlantic/South_Georgia'
      }, {
        text: '(GMT-01:00) Azores',
        value: 'Atlantic/Azores'
      }, {
        text: '(GMT-01:00) Cape Verde',
        value: 'Atlantic/Cape_Verde'
      }, {
        text: '(GMT-01:00) Scoresbysund',
        value: 'America/Scoresbysund'
      }, {
        text: '(GMT+00:00) Abidjan',
        value: 'Africa/Abidjan'
      }, {
        text: '(GMT+00:00) Accra',
        value: 'Africa/Accra'
      }, {
        text: '(GMT+00:00) Bissau',
        value: 'Africa/Bissau'
      }, {
        text: '(GMT+00:00) Canary Islands',
        value: 'Atlantic/Canary'
      }, {
        text: '(GMT+00:00) Casablanca',
        value: 'Africa/Casablanca'
      }, {
        text: '(GMT+00:00) Danmarkshavn',
        value: 'America/Danmarkshavn'
      }, {
        text: '(GMT+00:00) Dublin',
        value: 'Europe/Dublin'
      }, {
        text: '(GMT+00:00) El Aaiun',
        value: 'Africa/El_Aaiun'
      }, {
        text: '(GMT+00:00) Faeroe',
        value: 'Atlantic/Faroe'
      }, {
        text: '(GMT+00:00) GMT (no daylight saving)',
        value: 'Etc/GMT'
      }, {
        text: '(GMT+00:00) Lisbon',
        value: 'Europe/Lisbon'
      }, {
        text: '(GMT+00:00) London',
        value: 'Europe/London'
      }, {
        text: '(GMT+00:00) Monrovia',
        value: 'Africa/Monrovia'
      }, {
        text: '(GMT+00:00) Reykjavik',
        value: 'Atlantic/Reykjavik'
      }, {
        text: '(GMT+01:00) Algiers',
        value: 'Africa/Algiers'
      }, {
        text: '(GMT+01:00) Amsterdam',
        value: 'Europe/Amsterdam'
      }, {
        text: '(GMT+01:00) Andorra',
        value: 'Europe/Andorra'
      }, {
        text: '(GMT+01:00) Berlin',
        value: 'Europe/Berlin'
      }, {
        text: '(GMT+01:00) Brussels',
        value: 'Europe/Brussels'
      }, {
        text: '(GMT+01:00) Budapest',
        value: 'Europe/Budapest'
      }, {
        text: '(GMT+01:00) Central European Time - Belgrade',
        value: 'Europe/Belgrade'
      }, {
        text: '(GMT+01:00) Central European Time - Prague',
        value: 'Europe/Prague'
      }, {
        text: '(GMT+01:00) Ceuta',
        value: 'Africa/Ceuta'
      }, {
        text: '(GMT+01:00) Copenhagen',
        value: 'Europe/Copenhagen'
      }, {
        text: '(GMT+01:00) Gibraltar',
        value: 'Europe/Gibraltar'
      }, {
        text: '(GMT+01:00) Lagos',
        value: 'Africa/Lagos'
      }, {
        text: '(GMT+01:00) Luxembourg',
        value: 'Europe/Luxembourg'
      }, {
        text: '(GMT+01:00) Madrid',
        value: 'Europe/Madrid'
      }, {
        text: '(GMT+01:00) Malta',
        value: 'Europe/Malta'
      }, {
        text: '(GMT+01:00) Monaco',
        value: 'Europe/Monaco'
      }, {
        text: '(GMT+01:00) Ndjamena',
        value: 'Africa/Ndjamena'
      }, {
        text: '(GMT+01:00) Oslo',
        value: 'Europe/Oslo'
      }, {
        text: '(GMT+01:00) Paris',
        value: 'Europe/Paris'
      }, {
        text: '(GMT+01:00) Rome',
        value: 'Europe/Rome'
      }, {
        text: '(GMT+01:00) Stockholm',
        value: 'Europe/Stockholm'
      }, {
        text: '(GMT+01:00) Tirane',
        value: 'Europe/Tirane'
      }, {
        text: '(GMT+01:00) Tunis',
        value: 'Africa/Tunis'
      }, {
        text: '(GMT+01:00) Vienna',
        value: 'Europe/Vienna'
      }, {
        text: '(GMT+01:00) Warsaw',
        value: 'Europe/Warsaw'
      }, {
        text: '(GMT+01:00) Zurich',
        value: 'Europe/Zurich'
      }, {
        text: '(GMT+02:00) Amman',
        value: 'Asia/Amman'
      }, {
        text: '(GMT+02:00) Athens',
        value: 'Europe/Athens'
      }, {
        text: '(GMT+02:00) Beirut',
        value: 'Asia/Beirut'
      }, {
        text: '(GMT+02:00) Bucharest',
        value: 'Europe/Bucharest'
      }, {
        text: '(GMT+02:00) Cairo',
        value: 'Africa/Cairo'
      }, {
        text: '(GMT+02:00) Chisinau',
        value: 'Europe/Chisinau'
      }, {
        text: '(GMT+02:00) Damascus',
        value: 'Asia/Damascus'
      }, {
        text: '(GMT+02:00) Gaza',
        value: 'Asia/Gaza'
      }, {
        text: '(GMT+02:00) Helsinki',
        value: 'Europe/Helsinki'
      }, {
        text: '(GMT+02:00) Jerusalem',
        value: 'Asia/Jerusalem'
      }, {
        text: '(GMT+02:00) Johannesburg',
        value: 'Africa/Johannesburg'
      }, {
        text: '(GMT+02:00) Khartoum',
        value: 'Africa/Khartoum'
      }, {
        text: '(GMT+02:00) Kyiv',
        value: 'Europe/Kyiv'
      }, {
        text: '(GMT+02:00) Maputo',
        value: 'Africa/Maputo'
      }, {
        text: '(GMT+02:00) Moscow-01 - Kaliningrad',
        value: 'Europe/Kaliningrad'
      }, {
        text: '(GMT+02:00) Nicosia',
        value: 'Asia/Nicosia'
      }, {
        text: '(GMT+02:00) Riga',
        value: 'Europe/Riga'
      }, {
        text: '(GMT+02:00) Sofia',
        value: 'Europe/Sofia'
      }, {
        text: '(GMT+02:00) Tallinn',
        value: 'Europe/Tallinn'
      }, {
        text: '(GMT+02:00) Tripoli',
        value: 'Africa/Tripoli'
      }, {
        text: '(GMT+02:00) Vilnius',
        value: 'Europe/Vilnius'
      }, {
        text: '(GMT+02:00) Windhoek',
        value: 'Africa/Windhoek'
      }, {
        text: '(GMT+03:00) Baghdad',
        value: 'Asia/Baghdad'
      }, {
        text: '(GMT+03:00) Istanbul',
        value: 'Europe/Istanbul'
      }, {
        text: '(GMT+03:00) Minsk',
        value: 'Europe/Minsk'
      }, {
        text: '(GMT+03:00) Moscow+00 - Moscow',
        value: 'Europe/Moscow'
      }, {
        text: '(GMT+03:00) Nairobi',
        value: 'Africa/Nairobi'
      }, {
        text: '(GMT+03:00) Qatar',
        value: 'Asia/Qatar'
      }, {
        text: '(GMT+03:00) Riyadh',
        value: 'Asia/Riyadh'
      }, {
        text: '(GMT+03:00) Syowa',
        value: 'Antarctica/Syowa'
      }, {
        text: '(GMT+03:30) Tehran',
        value: 'Asia/Tehran'
      }, {
        text: '(GMT+04:00) Baku',
        value: 'Asia/Baku'
      }, {
        text: '(GMT+04:00) Dubai',
        value: 'Asia/Dubai'
      }, {
        text: '(GMT+04:00) Mahe',
        value: 'Indian/Mahe'
      }, {
        text: '(GMT+04:00) Mauritius',
        value: 'Indian/Mauritius'
      }, {
        text: '(GMT+04:00) Moscow+01 - Samara',
        value: 'Europe/Samara'
      }, {
        text: '(GMT+04:00) Reunion',
        value: 'Indian/Reunion'
      }, {
        text: '(GMT+04:00) Tbilisi',
        value: 'Asia/Tbilisi'
      }, {
        text: '(GMT+04:00) Yerevan',
        value: 'Asia/Yerevan'
      }, {
        text: '(GMT+04:30) Kabul',
        value: 'Asia/Kabul'
      }, {
        text: '(GMT+05:00) Aqtau',
        value: 'Asia/Aqtau'
      }, {
        text: '(GMT+05:00) Aqtobe',
        value: 'Asia/Aqtobe'
      }, {
        text: '(GMT+05:00) Ashgabat',
        value: 'Asia/Ashgabat'
      }, {
        text: '(GMT+05:00) Dushanbe',
        value: 'Asia/Dushanbe'
      }, {
        text: '(GMT+05:00) Karachi',
        value: 'Asia/Karachi'
      }, {
        text: '(GMT+05:00) Kerguelen',
        value: 'Indian/Kerguelen'
      }, {
        text: '(GMT+05:00) Maldives',
        value: 'Indian/Maldives'
      }, {
        text: '(GMT+05:00) Mawson',
        value: 'Antarctica/Mawson'
      }, {
        text: '(GMT+05:00) Moscow+02 - Yekaterinburg',
        value: 'Asia/Yekaterinburg'
      }, {
        text: '(GMT+05:00) Tashkent',
        value: 'Asia/Tashkent'
      }, {
        text: '(GMT+05:30) Colombo',
        value: 'Asia/Colombo'
      }, {
        text: '(GMT+05:30) India Standard Time',
        value: 'Asia/Kolkata'
      }, {
        text: '(GMT+05:45) Kathmandu',
        value: 'Asia/Kathmandu'
      }, {
        text: '(GMT+06:00) Almaty',
        value: 'Asia/Almaty'
      }, {
        text: '(GMT+06:00) Bishkek',
        value: 'Asia/Bishkek'
      }, {
        text: '(GMT+06:00) Chagos',
        value: 'Indian/Chagos'
      }, {
        text: '(GMT+06:00) Dhaka',
        value: 'Asia/Dhaka'
      }, {
        text: '(GMT+06:00) Moscow+03 - Omsk',
        value: 'Asia/Omsk'
      }, {
        text: '(GMT+06:00) Thimphu',
        value: 'Asia/Thimphu'
      }, {
        text: '(GMT+06:00) Vostok',
        value: 'Antarctica/Vostok'
      }, {
        text: '(GMT+06:30) Cocos',
        value: 'Indian/Cocos'
      }, {
        text: '(GMT+06:30) Rangoon',
        value: 'Asia/Yangon'
      }, {
        text: '(GMT+07:00) Bangkok',
        value: 'Asia/Bangkok'
      }, {
        text: '(GMT+07:00) Christmas',
        value: 'Indian/Christmas'
      }, {
        text: '(GMT+07:00) Davis',
        value: 'Antarctica/Davis'
      }, {
        text: '(GMT+07:00) Hanoi',
        value: 'Asia/Saigon'
      }, {
        text: '(GMT+07:00) Hovd',
        value: 'Asia/Hovd'
      }, {
        text: '(GMT+07:00) Jakarta',
        value: 'Asia/Jakarta'
      }, {
        text: '(GMT+07:00) Moscow+04 - Krasnoyarsk',
        value: 'Asia/Krasnoyarsk'
      }, {
        text: '(GMT+08:00) Brunei',
        value: 'Asia/Brunei'
      }, {
        text: '(GMT+08:00) China Time - Beijing',
        value: 'Asia/Shanghai'
      }, {
        text: '(GMT+08:00) Choibalsan',
        value: 'Asia/Choibalsan'
      }, {
        text: '(GMT+08:00) Hong Kong',
        value: 'Asia/Hong_Kong'
      }, {
        text: '(GMT+08:00) Kuala Lumpur',
        value: 'Asia/Kuala_Lumpur'
      }, {
        text: '(GMT+08:00) Macau',
        value: 'Asia/Macau'
      }, {
        text: '(GMT+08:00) Makassar',
        value: 'Asia/Makassar'
      }, {
        text: '(GMT+08:00) Manila',
        value: 'Asia/Manila'
      }, {
        text: '(GMT+08:00) Moscow+05 - Irkutsk',
        value: 'Asia/Irkutsk'
      }, {
        text: '(GMT+08:00) Singapore',
        value: 'Asia/Singapore'
      }, {
        text: '(GMT+08:00) Taipei',
        value: 'Asia/Taipei'
      }, {
        text: '(GMT+08:00) Ulaanbaatar',
        value: 'Asia/Ulaanbaatar'
      }, {
        text: '(GMT+08:00) Western Time - Perth',
        value: 'Australia/Perth'
      }, {
        text: '(GMT+08:30) Pyongyang',
        value: 'Asia/Pyongyang'
      }, {
        text: '(GMT+09:00) Dili',
        value: 'Asia/Dili'
      }, {
        text: '(GMT+09:00) Jayapura',
        value: 'Asia/Jayapura'
      }, {
        text: '(GMT+09:00) Moscow+06 - Yakutsk',
        value: 'Asia/Yakutsk'
      }, {
        text: '(GMT+09:00) Palau',
        value: 'Pacific/Palau'
      }, {
        text: '(GMT+09:00) Seoul',
        value: 'Asia/Seoul'
      }, {
        text: '(GMT+09:00) Tokyo',
        value: 'Asia/Tokyo'
      }, {
        text: '(GMT+09:30) Central Time - Darwin',
        value: 'Australia/Darwin'
      }, {
        text: '(GMT+10:00) Dumont D\'Urville',
        value: 'Antarctica/DumontDUrville'
      }, {
        text: '(GMT+10:00) Eastern Time - Brisbane',
        value: 'Australia/Brisbane'
      }, {
        text: '(GMT+10:00) Guam',
        value: 'Pacific/Guam'
      }, {
        text: '(GMT+10:00) Moscow+07 - Vladivostok',
        value: 'Asia/Vladivostok'
      }, {
        text: '(GMT+10:00) Port Moresby',
        value: 'Pacific/Port_Moresby'
      }, {
        text: '(GMT+10:00) Truk',
        value: 'Pacific/Chuuk'
      }, {
        text: '(GMT+10:30) Central Time - Adelaide',
        value: 'Australia/Adelaide'
      }, {
        text: '(GMT+11:00) Casey',
        value: 'Antarctica/Casey'
      }, {
        text: '(GMT+11:00) Eastern Time - Hobart',
        value: 'Australia/Hobart'
      }, {
        text: '(GMT+11:00) Eastern Time - Melbourne, Sydney',
        value: 'Australia/Sydney'
      }, {
        text: '(GMT+11:00) Efate',
        value: 'Pacific/Efate'
      }, {
        text: '(GMT+11:00) Guadalcanal',
        value: 'Pacific/Guadalcanal'
      }, {
        text: '(GMT+11:00) Kosrae',
        value: 'Pacific/Kosrae'
      }, {
        text: '(GMT+11:00) Moscow+08 - Magadan',
        value: 'Asia/Magadan'
      }, {
        text: '(GMT+11:00) Norfolk',
        value: 'Pacific/Norfolk'
      }, {
        text: '(GMT+11:00) Noumea',
        value: 'Pacific/Noumea'
      }, {
        text: '(GMT+11:00) Ponape',
        value: 'Pacific/Pohnpei'
      }, {
        text: '(GMT+12:00) Funafuti',
        value: 'Pacific/Funafuti'
      }, {
        text: '(GMT+12:00) Kwajalein',
        value: 'Pacific/Kwajalein'
      }, {
        text: '(GMT+12:00) Majuro',
        value: 'Pacific/Majuro'
      }, {
        text: '(GMT+12:00) Moscow+09 - Petropavlovsk-Kamchatskiy',
        value: 'Asia/Kamchatka'
      }, {
        text: '(GMT+12:00) Nauru',
        value: 'Pacific/Nauru'
      }, {
        text: '(GMT+12:00) Tarawa',
        value: 'Pacific/Tarawa'
      }, {
        text: '(GMT+12:00) Wake',
        value: 'Pacific/Wake'
      }, {
        text: '(GMT+12:00) Wallis',
        value: 'Pacific/Wallis'
      }, {
        text: '(GMT+13:00) Auckland',
        value: 'Pacific/Auckland'
      }, {
        text: '(GMT+13:00) Enderbury',
        value: 'Pacific/Enderbury'
      }, {
        text: '(GMT+13:00) Fakaofo',
        value: 'Pacific/Fakaofo'
      }, {
        text: '(GMT+13:00) Fiji',
        value: 'Pacific/Fiji'
      }, {
        text: '(GMT+13:00) Tongatapu',
        value: 'Pacific/Tongatapu'
      }, {
        text: '(GMT+14:00) Apia',
        value: 'Pacific/Apia'
      }, {
        text: '(GMT+14:00) Kiritimati',
        value: 'Pacific/Kiritimati'
      }]
    };
  },
  computed: {
    dateFormats: function dateFormats() {
      return [{
        text: this.$t('profile:localeDefault'),
        value: ''
      }, {
        text: 'DD/MM/YYYY',
        value: 'DD/MM/YYYY'
      }, {
        text: 'DD.MM.YYYY',
        value: 'DD.MM.YYYY'
      }, {
        text: 'MM/DD/YYYY',
        value: 'MM/DD/YYYY'
      }, {
        text: 'YYYY-MM-DD',
        value: 'YYYY-MM-DD'
      }, {
        text: 'YYYY/MM/DD',
        value: 'YYYY/MM/DD'
      }];
    },
    appearances: function appearances() {
      return [{
        text: this.$t('profile:appearanceDefault'),
        value: ''
      }, {
        text: this.$t('profile:appearanceLight'),
        value: 'light'
      }, {
        text: this.$t('profile:appearanceDark'),
        value: 'dark'
      }];
    },
    currentAppearance: function currentAppearance() {
      return _get(_find(this.appearances, ['value', this.user.appearance]), 'text', false) || this.$t('profile:appearanceDefault');
    },
    pictureUrl: get('user/pictureUrl'),
    picture: function picture() {
      if (this.pictureUrl && this.pictureUrl.length > 1) {
        return {
          kind: 'image',
          url: this.pictureUrl
        };
      } else {
        var nameParts = this.user.name.toUpperCase().split(' ');
        var initials = _head(nameParts).charAt(0);
        if (nameParts.length > 1) {
          initials += _last(nameParts).charAt(0);
        }
        return {
          kind: 'initials',
          initials: initials
        };
      }
    }
  },
  watch: {
    'user.appearance': function userAppearance(newValue, oldValue) {
      if (newValue === '') {
        WIKI.$vuetify.theme.dark = siteConfig.darkMode;
      } else {
        WIKI.$vuetify.theme.dark = newValue === 'dark';
      }
    },
    'user.dateFormat': function userDateFormat(newValue, oldValue) {
      if (newValue === '') {
        WIKI.$moment.updateLocale(WIKI.$moment.locale(), null);
      } else {
        WIKI.$moment.updateLocale(WIKI.$moment.locale(), {
          longDateFormat: {
            'L': newValue
          }
        });
      }
    },
    'user.timezone': function userTimezone(newValue, oldValue) {
      if (newValue === '') {
        WIKI.$moment.tz.setDefault();
      } else {
        WIKI.$moment.tz.setDefault(newValue);
      }
    }
  },
  methods: {
    /**
     * Focus an input after delay
     */
    focusField: function focusField(ipt) {
      var _this = this;
      this.$nextTick(function () {
        _delay(function () {
          _this.$refs[ipt].focus();
        }, 200);
      });
    },
    /**
     * Save User Profile
     */
    saveProfile: function saveProfile() {
      var _this2 = this;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var respRaw, resp;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _this2.saveLoading = true;
              _this2.$store.commit("loadingStart", 'profile-save');
              _context.prev = 2;
              _context.next = 5;
              return _this2.$apollo.mutate({
                mutation: {
                  "kind": "Document",
                  "definitions": [{
                    "kind": "OperationDefinition",
                    "operation": "mutation",
                    "variableDefinitions": [{
                      "kind": "VariableDefinition",
                      "variable": {
                        "kind": "Variable",
                        "name": {
                          "kind": "Name",
                          "value": "name"
                        }
                      },
                      "type": {
                        "kind": "NonNullType",
                        "type": {
                          "kind": "NamedType",
                          "name": {
                            "kind": "Name",
                            "value": "String"
                          }
                        }
                      },
                      "directives": []
                    }, {
                      "kind": "VariableDefinition",
                      "variable": {
                        "kind": "Variable",
                        "name": {
                          "kind": "Name",
                          "value": "location"
                        }
                      },
                      "type": {
                        "kind": "NonNullType",
                        "type": {
                          "kind": "NamedType",
                          "name": {
                            "kind": "Name",
                            "value": "String"
                          }
                        }
                      },
                      "directives": []
                    }, {
                      "kind": "VariableDefinition",
                      "variable": {
                        "kind": "Variable",
                        "name": {
                          "kind": "Name",
                          "value": "jobTitle"
                        }
                      },
                      "type": {
                        "kind": "NonNullType",
                        "type": {
                          "kind": "NamedType",
                          "name": {
                            "kind": "Name",
                            "value": "String"
                          }
                        }
                      },
                      "directives": []
                    }, {
                      "kind": "VariableDefinition",
                      "variable": {
                        "kind": "Variable",
                        "name": {
                          "kind": "Name",
                          "value": "timezone"
                        }
                      },
                      "type": {
                        "kind": "NonNullType",
                        "type": {
                          "kind": "NamedType",
                          "name": {
                            "kind": "Name",
                            "value": "String"
                          }
                        }
                      },
                      "directives": []
                    }, {
                      "kind": "VariableDefinition",
                      "variable": {
                        "kind": "Variable",
                        "name": {
                          "kind": "Name",
                          "value": "dateFormat"
                        }
                      },
                      "type": {
                        "kind": "NonNullType",
                        "type": {
                          "kind": "NamedType",
                          "name": {
                            "kind": "Name",
                            "value": "String"
                          }
                        }
                      },
                      "directives": []
                    }, {
                      "kind": "VariableDefinition",
                      "variable": {
                        "kind": "Variable",
                        "name": {
                          "kind": "Name",
                          "value": "appearance"
                        }
                      },
                      "type": {
                        "kind": "NonNullType",
                        "type": {
                          "kind": "NamedType",
                          "name": {
                            "kind": "Name",
                            "value": "String"
                          }
                        }
                      },
                      "directives": []
                    }],
                    "directives": [],
                    "selectionSet": {
                      "kind": "SelectionSet",
                      "selections": [{
                        "kind": "Field",
                        "name": {
                          "kind": "Name",
                          "value": "users"
                        },
                        "arguments": [],
                        "directives": [],
                        "selectionSet": {
                          "kind": "SelectionSet",
                          "selections": [{
                            "kind": "Field",
                            "name": {
                              "kind": "Name",
                              "value": "updateProfile"
                            },
                            "arguments": [{
                              "kind": "Argument",
                              "name": {
                                "kind": "Name",
                                "value": "name"
                              },
                              "value": {
                                "kind": "Variable",
                                "name": {
                                  "kind": "Name",
                                  "value": "name"
                                }
                              }
                            }, {
                              "kind": "Argument",
                              "name": {
                                "kind": "Name",
                                "value": "location"
                              },
                              "value": {
                                "kind": "Variable",
                                "name": {
                                  "kind": "Name",
                                  "value": "location"
                                }
                              }
                            }, {
                              "kind": "Argument",
                              "name": {
                                "kind": "Name",
                                "value": "jobTitle"
                              },
                              "value": {
                                "kind": "Variable",
                                "name": {
                                  "kind": "Name",
                                  "value": "jobTitle"
                                }
                              }
                            }, {
                              "kind": "Argument",
                              "name": {
                                "kind": "Name",
                                "value": "timezone"
                              },
                              "value": {
                                "kind": "Variable",
                                "name": {
                                  "kind": "Name",
                                  "value": "timezone"
                                }
                              }
                            }, {
                              "kind": "Argument",
                              "name": {
                                "kind": "Name",
                                "value": "dateFormat"
                              },
                              "value": {
                                "kind": "Variable",
                                "name": {
                                  "kind": "Name",
                                  "value": "dateFormat"
                                }
                              }
                            }, {
                              "kind": "Argument",
                              "name": {
                                "kind": "Name",
                                "value": "appearance"
                              },
                              "value": {
                                "kind": "Variable",
                                "name": {
                                  "kind": "Name",
                                  "value": "appearance"
                                }
                              }
                            }],
                            "directives": [],
                            "selectionSet": {
                              "kind": "SelectionSet",
                              "selections": [{
                                "kind": "Field",
                                "name": {
                                  "kind": "Name",
                                  "value": "responseResult"
                                },
                                "arguments": [],
                                "directives": [],
                                "selectionSet": {
                                  "kind": "SelectionSet",
                                  "selections": [{
                                    "kind": "Field",
                                    "name": {
                                      "kind": "Name",
                                      "value": "succeeded"
                                    },
                                    "arguments": [],
                                    "directives": []
                                  }, {
                                    "kind": "Field",
                                    "name": {
                                      "kind": "Name",
                                      "value": "errorCode"
                                    },
                                    "arguments": [],
                                    "directives": []
                                  }, {
                                    "kind": "Field",
                                    "name": {
                                      "kind": "Name",
                                      "value": "slug"
                                    },
                                    "arguments": [],
                                    "directives": []
                                  }, {
                                    "kind": "Field",
                                    "name": {
                                      "kind": "Name",
                                      "value": "message"
                                    },
                                    "arguments": [],
                                    "directives": []
                                  }]
                                }
                              }, {
                                "kind": "Field",
                                "name": {
                                  "kind": "Name",
                                  "value": "jwt"
                                },
                                "arguments": [],
                                "directives": []
                              }]
                            }
                          }]
                        }
                      }]
                    }
                  }],
                  "loc": {
                    "start": 0,
                    "end": 573,
                    "source": {
                      "body": "\n            mutation ($name: String!, $location: String!, $jobTitle: String!, $timezone: String!, $dateFormat: String!, $appearance: String!) {\n              users {\n                updateProfile(name: $name, location: $location, jobTitle: $jobTitle, timezone: $timezone, dateFormat: $dateFormat, appearance: $appearance) {\n                  responseResult {\n                    succeeded\n                    errorCode\n                    slug\n                    message\n                  }\n                  jwt\n                }\n              }\n            }\n          ",
                      "name": "GraphQL request",
                      "locationOffset": {
                        "line": 1,
                        "column": 1
                      }
                    }
                  }
                },
                variables: {
                  name: _this2.user.name,
                  location: _this2.user.location,
                  jobTitle: _this2.user.jobTitle,
                  timezone: _this2.user.timezone,
                  dateFormat: _this2.user.dateFormat,
                  appearance: _this2.user.appearance
                }
              });
            case 5:
              respRaw = _context.sent;
              resp = _get(respRaw, 'data.users.updateProfile.responseResult', {});
              if (!resp.succeeded) {
                _context.next = 13;
                break;
              }
              Cookies.set('jwt', _get(respRaw, 'data.users.updateProfile.jwt', ''), {
                expires: 365
              });
              _this2.$store.set('user/name', _this2.user.name);
              _this2.$store.commit('showNotification', {
                message: _this2.$t('profile:save.success'),
                style: 'success',
                icon: 'check'
              });
              _context.next = 14;
              break;
            case 13:
              throw new Error(resp.message);
            case 14:
              _context.next = 19;
              break;
            case 16:
              _context.prev = 16;
              _context.t0 = _context["catch"](2);
              _this2.$store.commit('pushGraphError', _context.t0);
            case 19:
              _this2.$store.commit("loadingStop", 'profile-save');
              _this2.saveLoading = false;
            case 21:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[2, 16]]);
      }))();
    },
    /**
     * Change Password
     */
    changePassword: function changePassword() {
      var _this3 = this;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var validation, respRaw, resp;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              validation = validate({
                current: _this3.currentPass,
                password: _this3.newPass,
                verifyPassword: _this3.verifyPass
              }, {
                current: {
                  presence: {
                    message: _this3.$t('auth:missingPassword'),
                    allowEmpty: false
                  },
                  length: {
                    minimum: 6,
                    tooShort: _this3.$t('auth:passwordTooShort')
                  }
                },
                password: {
                  presence: {
                    message: _this3.$t('auth:missingPassword'),
                    allowEmpty: false
                  },
                  length: {
                    minimum: 6,
                    tooShort: _this3.$t('auth:passwordTooShort')
                  }
                },
                verifyPassword: {
                  equality: {
                    attribute: 'password',
                    message: _this3.$t('auth:passwordNotMatch')
                  }
                }
              }, {
                fullMessages: false
              });
              if (!validation) {
                _context2.next = 5;
                break;
              }
              if (validation.current) {
                _this3.$store.commit('showNotification', {
                  style: 'red',
                  message: validation.current[0],
                  icon: 'warning'
                });
                _this3.$refs.iptCurrentPass.focus();
              } else if (validation.password) {
                _this3.$store.commit('showNotification', {
                  style: 'red',
                  message: validation.password[0],
                  icon: 'warning'
                });
                _this3.$refs.iptNewPass.focus();
              } else if (validation.verifyPassword) {
                _this3.$store.commit('showNotification', {
                  style: 'red',
                  message: validation.verifyPassword[0],
                  icon: 'warning'
                });
                _this3.$refs.iptVerifyPass.focus();
              }
              _context2.next = 28;
              break;
            case 5:
              _this3.changePassLoading = true;
              _this3.$store.commit("loadingStart", 'profile-changepassword');
              _context2.prev = 7;
              _context2.next = 10;
              return _this3.$apollo.mutate({
                mutation: {
                  "kind": "Document",
                  "definitions": [{
                    "kind": "OperationDefinition",
                    "operation": "mutation",
                    "variableDefinitions": [{
                      "kind": "VariableDefinition",
                      "variable": {
                        "kind": "Variable",
                        "name": {
                          "kind": "Name",
                          "value": "current"
                        }
                      },
                      "type": {
                        "kind": "NonNullType",
                        "type": {
                          "kind": "NamedType",
                          "name": {
                            "kind": "Name",
                            "value": "String"
                          }
                        }
                      },
                      "directives": []
                    }, {
                      "kind": "VariableDefinition",
                      "variable": {
                        "kind": "Variable",
                        "name": {
                          "kind": "Name",
                          "value": "new"
                        }
                      },
                      "type": {
                        "kind": "NonNullType",
                        "type": {
                          "kind": "NamedType",
                          "name": {
                            "kind": "Name",
                            "value": "String"
                          }
                        }
                      },
                      "directives": []
                    }],
                    "directives": [],
                    "selectionSet": {
                      "kind": "SelectionSet",
                      "selections": [{
                        "kind": "Field",
                        "name": {
                          "kind": "Name",
                          "value": "users"
                        },
                        "arguments": [],
                        "directives": [],
                        "selectionSet": {
                          "kind": "SelectionSet",
                          "selections": [{
                            "kind": "Field",
                            "name": {
                              "kind": "Name",
                              "value": "changePassword"
                            },
                            "arguments": [{
                              "kind": "Argument",
                              "name": {
                                "kind": "Name",
                                "value": "current"
                              },
                              "value": {
                                "kind": "Variable",
                                "name": {
                                  "kind": "Name",
                                  "value": "current"
                                }
                              }
                            }, {
                              "kind": "Argument",
                              "name": {
                                "kind": "Name",
                                "value": "new"
                              },
                              "value": {
                                "kind": "Variable",
                                "name": {
                                  "kind": "Name",
                                  "value": "new"
                                }
                              }
                            }],
                            "directives": [],
                            "selectionSet": {
                              "kind": "SelectionSet",
                              "selections": [{
                                "kind": "Field",
                                "name": {
                                  "kind": "Name",
                                  "value": "responseResult"
                                },
                                "arguments": [],
                                "directives": [],
                                "selectionSet": {
                                  "kind": "SelectionSet",
                                  "selections": [{
                                    "kind": "Field",
                                    "name": {
                                      "kind": "Name",
                                      "value": "succeeded"
                                    },
                                    "arguments": [],
                                    "directives": []
                                  }, {
                                    "kind": "Field",
                                    "name": {
                                      "kind": "Name",
                                      "value": "errorCode"
                                    },
                                    "arguments": [],
                                    "directives": []
                                  }, {
                                    "kind": "Field",
                                    "name": {
                                      "kind": "Name",
                                      "value": "slug"
                                    },
                                    "arguments": [],
                                    "directives": []
                                  }, {
                                    "kind": "Field",
                                    "name": {
                                      "kind": "Name",
                                      "value": "message"
                                    },
                                    "arguments": [],
                                    "directives": []
                                  }]
                                }
                              }, {
                                "kind": "Field",
                                "name": {
                                  "kind": "Name",
                                  "value": "jwt"
                                },
                                "arguments": [],
                                "directives": []
                              }]
                            }
                          }]
                        }
                      }]
                    }
                  }],
                  "loc": {
                    "start": 0,
                    "end": 420,
                    "source": {
                      "body": "\n              mutation ($current: String!, $new: String!) {\n                users {\n                  changePassword(current: $current, new: $new) {\n                    responseResult {\n                      succeeded\n                      errorCode\n                      slug\n                      message\n                    }\n                    jwt\n                  }\n                }\n              }\n            ",
                      "name": "GraphQL request",
                      "locationOffset": {
                        "line": 1,
                        "column": 1
                      }
                    }
                  }
                },
                variables: {
                  current: _this3.currentPass,
                  new: _this3.newPass
                }
              });
            case 10:
              respRaw = _context2.sent;
              resp = _get(respRaw, 'data.users.changePassword.responseResult', {});
              if (!resp.succeeded) {
                _context2.next = 20;
                break;
              }
              _this3.currentPass = '';
              _this3.newPass = '';
              _this3.verifyPass = '';
              Cookies.set('jwt', _get(respRaw, 'data.users.changePassword.jwt', ''), {
                expires: 365
              });
              _this3.$store.commit('showNotification', {
                message: _this3.$t('profile:auth.changePassSuccess'),
                style: 'success',
                icon: 'check'
              });
              _context2.next = 21;
              break;
            case 20:
              throw new Error(resp.message);
            case 21:
              _context2.next = 26;
              break;
            case 23:
              _context2.prev = 23;
              _context2.t0 = _context2["catch"](7);
              _this3.$store.commit('pushGraphError', _context2.t0);
            case 26:
              _this3.$store.commit("loadingStop", 'profile-changepassword');
              _this3.changePassLoading = false;
            case 28:
            case "end":
              return _context2.stop();
          }
        }, _callee2, null, [[7, 23]]);
      }))();
    }
  },
  apollo: {
    user: {
      query: {
        "kind": "Document",
        "definitions": [{
          "kind": "OperationDefinition",
          "operation": "query",
          "variableDefinitions": [],
          "directives": [],
          "selectionSet": {
            "kind": "SelectionSet",
            "selections": [{
              "kind": "Field",
              "name": {
                "kind": "Name",
                "value": "users"
              },
              "arguments": [],
              "directives": [],
              "selectionSet": {
                "kind": "SelectionSet",
                "selections": [{
                  "kind": "Field",
                  "name": {
                    "kind": "Name",
                    "value": "profile"
                  },
                  "arguments": [],
                  "directives": [],
                  "selectionSet": {
                    "kind": "SelectionSet",
                    "selections": [{
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "id"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "name"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "email"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "providerKey"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "providerName"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "isSystem"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "isVerified"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "location"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "jobTitle"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "timezone"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "dateFormat"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "appearance"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "createdAt"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "updatedAt"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "lastLoginAt"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "groups"
                      },
                      "arguments": [],
                      "directives": []
                    }, {
                      "kind": "Field",
                      "name": {
                        "kind": "Name",
                        "value": "pagesTotal"
                      },
                      "arguments": [],
                      "directives": []
                    }]
                  }
                }]
              }
            }]
          }
        }],
        "loc": {
          "start": 0,
          "end": 489,
          "source": {
            "body": "\n        {\n          users {\n            profile {\n              id\n              name\n              email\n              providerKey\n              providerName\n              isSystem\n              isVerified\n              location\n              jobTitle\n              timezone\n              dateFormat\n              appearance\n              createdAt\n              updatedAt\n              lastLoginAt\n              groups\n              pagesTotal\n            }\n          }\n        }\n      ",
            "name": "GraphQL request",
            "locationOffset": {
              "line": 1,
              "column": 1
            }
          }
        }
      },
      fetchPolicy: 'network-only',
      update: function update(data) {
        return _cloneDeep(data.users.profile);
      },
      watchLoading: function watchLoading(isLoading) {
        this.$store.commit("loading" + (isLoading ? 'Start' : 'Stop'), 'profile-refresh');
      }
    }
  }
};"},null]}