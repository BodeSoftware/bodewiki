{"remainingRequest":"/Users/shanebeal/Desktop/bodewiki/node_modules/babel-loader/lib/index.js??ref--0-1!/Users/shanebeal/Desktop/bodewiki/node_modules/vuetify/lib/components/VMenu/VMenu.js","dependencies":[{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/vuetify/lib/components/VMenu/VMenu.js","mtime":1743632223118},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/cache-loader/dist/cjs.js","mtime":1743632217742},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/babel-loader/lib/index.js","mtime":1743632218430}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gU3R5bGVzCmltcG9ydCAiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVk1lbnUvVk1lbnUuc2FzcyI7IC8vIENvbXBvbmVudHMKCmltcG9ydCB7IFZUaGVtZVByb3ZpZGVyIH0gZnJvbSAnLi4vVlRoZW1lUHJvdmlkZXInOyAvLyBNaXhpbnMKCmltcG9ydCBBY3RpdmF0YWJsZSBmcm9tICcuLi8uLi9taXhpbnMvYWN0aXZhdGFibGUnOwppbXBvcnQgRGVsYXlhYmxlIGZyb20gJy4uLy4uL21peGlucy9kZWxheWFibGUnOwppbXBvcnQgRGVwZW5kZW50IGZyb20gJy4uLy4uL21peGlucy9kZXBlbmRlbnQnOwppbXBvcnQgRGV0YWNoYWJsZSBmcm9tICcuLi8uLi9taXhpbnMvZGV0YWNoYWJsZSc7CmltcG9ydCBNZW51YWJsZSBmcm9tICcuLi8uLi9taXhpbnMvbWVudWFibGUnOwppbXBvcnQgUmV0dXJuYWJsZSBmcm9tICcuLi8uLi9taXhpbnMvcmV0dXJuYWJsZSc7CmltcG9ydCBSb3VuZGFibGUgZnJvbSAnLi4vLi4vbWl4aW5zL3JvdW5kYWJsZSc7CmltcG9ydCBUb2dnbGVhYmxlIGZyb20gJy4uLy4uL21peGlucy90b2dnbGVhYmxlJzsKaW1wb3J0IFRoZW1lYWJsZSBmcm9tICcuLi8uLi9taXhpbnMvdGhlbWVhYmxlJzsgLy8gRGlyZWN0aXZlcwoKaW1wb3J0IENsaWNrT3V0c2lkZSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2NsaWNrLW91dHNpZGUnOwppbXBvcnQgUmVzaXplIGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvcmVzaXplJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgbWl4aW5zIGZyb20gJy4uLy4uL3V0aWwvbWl4aW5zJzsKaW1wb3J0IHsgcmVtb3ZlZCB9IGZyb20gJy4uLy4uL3V0aWwvY29uc29sZSc7CmltcG9ydCB7IGNvbnZlcnRUb1VuaXQsIGtleUNvZGVzIH0gZnJvbSAnLi4vLi4vdXRpbC9oZWxwZXJzJzsKdmFyIGJhc2VNaXhpbnMgPSBtaXhpbnMoRGVwZW5kZW50LCBEZWxheWFibGUsIERldGFjaGFibGUsIE1lbnVhYmxlLCBSZXR1cm5hYmxlLCBSb3VuZGFibGUsIFRvZ2dsZWFibGUsIFRoZW1lYWJsZSk7Ci8qIEB2dWUvY29tcG9uZW50ICovCgpleHBvcnQgZGVmYXVsdCBiYXNlTWl4aW5zLmV4dGVuZCh7CiAgbmFtZTogJ3YtbWVudScsCiAgZGlyZWN0aXZlczogewogICAgQ2xpY2tPdXRzaWRlOiBDbGlja091dHNpZGUsCiAgICBSZXNpemU6IFJlc2l6ZQogIH0sCiAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzSW5NZW51OiB0cnVlLAogICAgICAvLyBQYXNzIHRoZW1lIHRocm91Z2ggdG8gZGVmYXVsdCBzbG90CiAgICAgIHRoZW1lOiB0aGlzLnRoZW1lCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIGF1dG86IEJvb2xlYW4sCiAgICBjbG9zZU9uQ2xpY2s6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIGNsb3NlT25Db250ZW50Q2xpY2s6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIGRpc2FibGVkOiBCb29sZWFuLAogICAgZGlzYWJsZUtleXM6IEJvb2xlYW4sCiAgICBtYXhIZWlnaHQ6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSwKICAgICAgZGVmYXVsdDogJ2F1dG8nCiAgICB9LAogICAgb2Zmc2V0WDogQm9vbGVhbiwKICAgIG9mZnNldFk6IEJvb2xlYW4sCiAgICBvcGVuT25DbGljazogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgb3Blbk9uSG92ZXI6IEJvb2xlYW4sCiAgICBvcmlnaW46IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAndG9wIGxlZnQnCiAgICB9LAogICAgdHJhbnNpdGlvbjogewogICAgICB0eXBlOiBbQm9vbGVhbiwgU3RyaW5nXSwKICAgICAgZGVmYXVsdDogJ3YtbWVudS10cmFuc2l0aW9uJwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNhbGN1bGF0ZWRUb3BBdXRvOiAwLAogICAgICBkZWZhdWx0T2Zmc2V0OiA4LAogICAgICBoYXNKdXN0Rm9jdXNlZDogZmFsc2UsCiAgICAgIGxpc3RJbmRleDogLTEsCiAgICAgIHJlc2l6ZVRpbWVvdXQ6IDAsCiAgICAgIHNlbGVjdGVkSW5kZXg6IG51bGwsCiAgICAgIHRpbGVzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBhY3RpdmVUaWxlOiBmdW5jdGlvbiBhY3RpdmVUaWxlKCkgewogICAgICByZXR1cm4gdGhpcy50aWxlc1t0aGlzLmxpc3RJbmRleF07CiAgICB9LAogICAgY2FsY3VsYXRlZExlZnQ6IGZ1bmN0aW9uIGNhbGN1bGF0ZWRMZWZ0KCkgewogICAgICB2YXIgbWVudVdpZHRoID0gTWF0aC5tYXgodGhpcy5kaW1lbnNpb25zLmNvbnRlbnQud2lkdGgsIHBhcnNlRmxvYXQodGhpcy5jYWxjdWxhdGVkTWluV2lkdGgpKTsKICAgICAgaWYgKCF0aGlzLmF1dG8pIHJldHVybiB0aGlzLmNhbGNMZWZ0KG1lbnVXaWR0aCkgfHwgJzAnOwogICAgICByZXR1cm4gY29udmVydFRvVW5pdCh0aGlzLmNhbGNYT3ZlcmZsb3codGhpcy5jYWxjTGVmdEF1dG8oKSwgbWVudVdpZHRoKSkgfHwgJzAnOwogICAgfSwKICAgIGNhbGN1bGF0ZWRNYXhIZWlnaHQ6IGZ1bmN0aW9uIGNhbGN1bGF0ZWRNYXhIZWlnaHQoKSB7CiAgICAgIHZhciBoZWlnaHQgPSB0aGlzLmF1dG8gPyAnMjAwcHgnIDogY29udmVydFRvVW5pdCh0aGlzLm1heEhlaWdodCk7CiAgICAgIHJldHVybiBoZWlnaHQgfHwgJzAnOwogICAgfSwKICAgIGNhbGN1bGF0ZWRNYXhXaWR0aDogZnVuY3Rpb24gY2FsY3VsYXRlZE1heFdpZHRoKCkgewogICAgICByZXR1cm4gY29udmVydFRvVW5pdCh0aGlzLm1heFdpZHRoKSB8fCAnMCc7CiAgICB9LAogICAgY2FsY3VsYXRlZE1pbldpZHRoOiBmdW5jdGlvbiBjYWxjdWxhdGVkTWluV2lkdGgoKSB7CiAgICAgIGlmICh0aGlzLm1pbldpZHRoKSB7CiAgICAgICAgcmV0dXJuIGNvbnZlcnRUb1VuaXQodGhpcy5taW5XaWR0aCkgfHwgJzAnOwogICAgICB9CiAgICAgIHZhciBtaW5XaWR0aCA9IE1hdGgubWluKHRoaXMuZGltZW5zaW9ucy5hY3RpdmF0b3Iud2lkdGggKyBOdW1iZXIodGhpcy5udWRnZVdpZHRoKSArICh0aGlzLmF1dG8gPyAxNiA6IDApLCBNYXRoLm1heCh0aGlzLnBhZ2VXaWR0aCAtIDI0LCAwKSk7CiAgICAgIHZhciBjYWxjdWxhdGVkTWF4V2lkdGggPSBpc05hTihwYXJzZUludCh0aGlzLmNhbGN1bGF0ZWRNYXhXaWR0aCkpID8gbWluV2lkdGggOiBwYXJzZUludCh0aGlzLmNhbGN1bGF0ZWRNYXhXaWR0aCk7CiAgICAgIHJldHVybiBjb252ZXJ0VG9Vbml0KE1hdGgubWluKGNhbGN1bGF0ZWRNYXhXaWR0aCwgbWluV2lkdGgpKSB8fCAnMCc7CiAgICB9LAogICAgY2FsY3VsYXRlZFRvcDogZnVuY3Rpb24gY2FsY3VsYXRlZFRvcCgpIHsKICAgICAgdmFyIHRvcCA9ICF0aGlzLmF1dG8gPyB0aGlzLmNhbGNUb3AoKSA6IGNvbnZlcnRUb1VuaXQodGhpcy5jYWxjWU92ZXJmbG93KHRoaXMuY2FsY3VsYXRlZFRvcEF1dG8pKTsKICAgICAgcmV0dXJuIHRvcCB8fCAnMCc7CiAgICB9LAogICAgaGFzQ2xpY2thYmxlVGlsZXM6IGZ1bmN0aW9uIGhhc0NsaWNrYWJsZVRpbGVzKCkgewogICAgICByZXR1cm4gQm9vbGVhbih0aGlzLnRpbGVzLmZpbmQoZnVuY3Rpb24gKHRpbGUpIHsKICAgICAgICByZXR1cm4gdGlsZS50YWJJbmRleCA+IC0xOwogICAgICB9KSk7CiAgICB9LAogICAgc3R5bGVzOiBmdW5jdGlvbiBzdHlsZXMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgbWF4SGVpZ2h0OiB0aGlzLmNhbGN1bGF0ZWRNYXhIZWlnaHQsCiAgICAgICAgbWluV2lkdGg6IHRoaXMuY2FsY3VsYXRlZE1pbldpZHRoLAogICAgICAgIG1heFdpZHRoOiB0aGlzLmNhbGN1bGF0ZWRNYXhXaWR0aCwKICAgICAgICB0b3A6IHRoaXMuY2FsY3VsYXRlZFRvcCwKICAgICAgICBsZWZ0OiB0aGlzLmNhbGN1bGF0ZWRMZWZ0LAogICAgICAgIHRyYW5zZm9ybU9yaWdpbjogdGhpcy5vcmlnaW4sCiAgICAgICAgekluZGV4OiB0aGlzLnpJbmRleCB8fCB0aGlzLmFjdGl2ZVpJbmRleAogICAgICB9OwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGlzQWN0aXZlOiBmdW5jdGlvbiBpc0FjdGl2ZSh2YWwpIHsKICAgICAgaWYgKCF2YWwpIHRoaXMubGlzdEluZGV4ID0gLTE7CiAgICB9LAogICAgaXNDb250ZW50QWN0aXZlOiBmdW5jdGlvbiBpc0NvbnRlbnRBY3RpdmUodmFsKSB7CiAgICAgIHRoaXMuaGFzSnVzdEZvY3VzZWQgPSB2YWw7CiAgICB9LAogICAgbGlzdEluZGV4OiBmdW5jdGlvbiBsaXN0SW5kZXgobmV4dCwgcHJldikgewogICAgICBpZiAobmV4dCBpbiB0aGlzLnRpbGVzKSB7CiAgICAgICAgdmFyIHRpbGUgPSB0aGlzLnRpbGVzW25leHRdOwogICAgICAgIHRpbGUuY2xhc3NMaXN0LmFkZCgndi1saXN0LWl0ZW0tLWhpZ2hsaWdodGVkJyk7CiAgICAgICAgdGhpcy4kcmVmcy5jb250ZW50LnNjcm9sbFRvcCA9IHRpbGUub2Zmc2V0VG9wIC0gdGlsZS5jbGllbnRIZWlnaHQ7CiAgICAgIH0KICAgICAgcHJldiBpbiB0aGlzLnRpbGVzICYmIHRoaXMudGlsZXNbcHJldl0uY2xhc3NMaXN0LnJlbW92ZSgndi1saXN0LWl0ZW0tLWhpZ2hsaWdodGVkJyk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KICAgIGlmICh0aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eSgnZnVsbC13aWR0aCcpKSB7CiAgICAgIHJlbW92ZWQoJ2Z1bGwtd2lkdGgnLCB0aGlzKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmlzQWN0aXZlICYmIHRoaXMuY2FsbEFjdGl2YXRlKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhY3RpdmF0ZTogZnVuY3Rpb24gYWN0aXZhdGUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIC8vIFVwZGF0ZSBjb29yZGluYXRlcyBhbmQgZGltZW5zaW9ucyBvZiBtZW51CiAgICAgIC8vIGFuZCBpdHMgYWN0aXZhdG9yCiAgICAgIHRoaXMudXBkYXRlRGltZW5zaW9ucygpOyAvLyBTdGFydCB0aGUgdHJhbnNpdGlvbgoKICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyBPbmNlIHRyYW5zaXRpb25pbmcsIGNhbGN1bGF0ZSBzY3JvbGwgYW5kIHRvcCBwb3NpdGlvbgogICAgICAgIF90aGlzLnN0YXJ0VHJhbnNpdGlvbigpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKF90aGlzLiRyZWZzLmNvbnRlbnQpIHsKICAgICAgICAgICAgX3RoaXMuY2FsY3VsYXRlZFRvcEF1dG8gPSBfdGhpcy5jYWxjVG9wQXV0bygpOwogICAgICAgICAgICBfdGhpcy5hdXRvICYmIChfdGhpcy4kcmVmcy5jb250ZW50LnNjcm9sbFRvcCA9IF90aGlzLmNhbGNTY3JvbGxQb3NpdGlvbigpKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgY2FsY1Njcm9sbFBvc2l0aW9uOiBmdW5jdGlvbiBjYWxjU2Nyb2xsUG9zaXRpb24oKSB7CiAgICAgIHZhciAkZWwgPSB0aGlzLiRyZWZzLmNvbnRlbnQ7CiAgICAgIHZhciBhY3RpdmVUaWxlID0gJGVsLnF1ZXJ5U2VsZWN0b3IoJy52LWxpc3QtaXRlbS0tYWN0aXZlJyk7CiAgICAgIHZhciBtYXhTY3JvbGxUb3AgPSAkZWwuc2Nyb2xsSGVpZ2h0IC0gJGVsLm9mZnNldEhlaWdodDsKICAgICAgcmV0dXJuIGFjdGl2ZVRpbGUgPyBNYXRoLm1pbihtYXhTY3JvbGxUb3AsIE1hdGgubWF4KDAsIGFjdGl2ZVRpbGUub2Zmc2V0VG9wIC0gJGVsLm9mZnNldEhlaWdodCAvIDIgKyBhY3RpdmVUaWxlLm9mZnNldEhlaWdodCAvIDIpKSA6ICRlbC5zY3JvbGxUb3A7CiAgICB9LAogICAgY2FsY0xlZnRBdXRvOiBmdW5jdGlvbiBjYWxjTGVmdEF1dG8oKSB7CiAgICAgIHJldHVybiBwYXJzZUludCh0aGlzLmRpbWVuc2lvbnMuYWN0aXZhdG9yLmxlZnQgLSB0aGlzLmRlZmF1bHRPZmZzZXQgKiAyKTsKICAgIH0sCiAgICBjYWxjVG9wQXV0bzogZnVuY3Rpb24gY2FsY1RvcEF1dG8oKSB7CiAgICAgIHZhciAkZWwgPSB0aGlzLiRyZWZzLmNvbnRlbnQ7CiAgICAgIHZhciBhY3RpdmVUaWxlID0gJGVsLnF1ZXJ5U2VsZWN0b3IoJy52LWxpc3QtaXRlbS0tYWN0aXZlJyk7CiAgICAgIGlmICghYWN0aXZlVGlsZSkgewogICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IG51bGw7CiAgICAgIH0KICAgICAgaWYgKHRoaXMub2Zmc2V0WSB8fCAhYWN0aXZlVGlsZSkgewogICAgICAgIHJldHVybiB0aGlzLmNvbXB1dGVkVG9wOwogICAgICB9CiAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IEFycmF5LmZyb20odGhpcy50aWxlcykuaW5kZXhPZihhY3RpdmVUaWxlKTsKICAgICAgdmFyIHRpbGVEaXN0YW5jZUZyb21NZW51VG9wID0gYWN0aXZlVGlsZS5vZmZzZXRUb3AgLSB0aGlzLmNhbGNTY3JvbGxQb3NpdGlvbigpOwogICAgICB2YXIgZmlyc3RUaWxlT2Zmc2V0VG9wID0gJGVsLnF1ZXJ5U2VsZWN0b3IoJy52LWxpc3QtaXRlbScpLm9mZnNldFRvcDsKICAgICAgcmV0dXJuIHRoaXMuY29tcHV0ZWRUb3AgLSB0aWxlRGlzdGFuY2VGcm9tTWVudVRvcCAtIGZpcnN0VGlsZU9mZnNldFRvcCAtIDE7CiAgICB9LAogICAgY2hhbmdlTGlzdEluZGV4OiBmdW5jdGlvbiBjaGFuZ2VMaXN0SW5kZXgoZSkgewogICAgICAvLyBGb3IgaW5maW5pdGUgc2Nyb2xsIGFuZCBhdXRvY29tcGxldGUsIHJlLWV2YWx1YXRlIGNoaWxkcmVuCiAgICAgIHRoaXMuZ2V0VGlsZXMoKTsKICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlIHx8ICF0aGlzLmhhc0NsaWNrYWJsZVRpbGVzKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PT0ga2V5Q29kZXMudGFiKSB7CiAgICAgICAgdGhpcy5pc0FjdGl2ZSA9IGZhbHNlOwogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT09IGtleUNvZGVzLmRvd24pIHsKICAgICAgICB0aGlzLm5leHRUaWxlKCk7CiAgICAgIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09PSBrZXlDb2Rlcy51cCkgewogICAgICAgIHRoaXMucHJldlRpbGUoKTsKICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT09IGtleUNvZGVzLmVudGVyICYmIHRoaXMubGlzdEluZGV4ICE9PSAtMSkgewogICAgICAgIHRoaXMudGlsZXNbdGhpcy5saXN0SW5kZXhdLmNsaWNrKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9IC8vIE9uZSBvZiB0aGUgY29uZGl0aW9ucyB3YXMgbWV0LCBwcmV2ZW50IGRlZmF1bHQgYWN0aW9uICgjMjk4OCkKCiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgIH0sCiAgICBjbG9zZUNvbmRpdGlvbmFsOiBmdW5jdGlvbiBjbG9zZUNvbmRpdGlvbmFsKGUpIHsKICAgICAgdmFyIHRhcmdldCA9IGUudGFyZ2V0OwogICAgICByZXR1cm4gdGhpcy5pc0FjdGl2ZSAmJiAhdGhpcy5faXNEZXN0cm95ZWQgJiYgdGhpcy5jbG9zZU9uQ2xpY2sgJiYgIXRoaXMuJHJlZnMuY29udGVudC5jb250YWlucyh0YXJnZXQpOwogICAgfSwKICAgIGdlbkFjdGl2YXRvckF0dHJpYnV0ZXM6IGZ1bmN0aW9uIGdlbkFjdGl2YXRvckF0dHJpYnV0ZXMoKSB7CiAgICAgIHZhciBhdHRyaWJ1dGVzID0gQWN0aXZhdGFibGUub3B0aW9ucy5tZXRob2RzLmdlbkFjdGl2YXRvckF0dHJpYnV0ZXMuY2FsbCh0aGlzKTsKICAgICAgaWYgKHRoaXMuYWN0aXZlVGlsZSAmJiB0aGlzLmFjdGl2ZVRpbGUuaWQpIHsKICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgYXR0cmlidXRlcywgewogICAgICAgICAgJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCc6IHRoaXMuYWN0aXZlVGlsZS5pZAogICAgICAgIH0pOwogICAgICB9CiAgICAgIHJldHVybiBhdHRyaWJ1dGVzOwogICAgfSwKICAgIGdlbkFjdGl2YXRvckxpc3RlbmVyczogZnVuY3Rpb24gZ2VuQWN0aXZhdG9yTGlzdGVuZXJzKCkgewogICAgICB2YXIgbGlzdGVuZXJzID0gTWVudWFibGUub3B0aW9ucy5tZXRob2RzLmdlbkFjdGl2YXRvckxpc3RlbmVycy5jYWxsKHRoaXMpOwogICAgICBpZiAoIXRoaXMuZGlzYWJsZUtleXMpIHsKICAgICAgICBsaXN0ZW5lcnMua2V5ZG93biA9IHRoaXMub25LZXlEb3duOwogICAgICB9CiAgICAgIHJldHVybiBsaXN0ZW5lcnM7CiAgICB9LAogICAgZ2VuVHJhbnNpdGlvbjogZnVuY3Rpb24gZ2VuVHJhbnNpdGlvbigpIHsKICAgICAgdmFyIGNvbnRlbnQgPSB0aGlzLmdlbkNvbnRlbnQoKTsKICAgICAgaWYgKCF0aGlzLnRyYW5zaXRpb24pIHJldHVybiBjb250ZW50OwogICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbicsIHsKICAgICAgICBwcm9wczogewogICAgICAgICAgbmFtZTogdGhpcy50cmFuc2l0aW9uCiAgICAgICAgfQogICAgICB9LCBbY29udGVudF0pOwogICAgfSwKICAgIGdlbkRpcmVjdGl2ZXM6IGZ1bmN0aW9uIGdlbkRpcmVjdGl2ZXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB2YXIgZGlyZWN0aXZlcyA9IFt7CiAgICAgICAgbmFtZTogJ3Nob3cnLAogICAgICAgIHZhbHVlOiB0aGlzLmlzQ29udGVudEFjdGl2ZQogICAgICB9XTsgLy8gRG8gbm90IGFkZCBjbGljayBvdXRzaWRlIGZvciBob3ZlciBtZW51CgogICAgICBpZiAoIXRoaXMub3Blbk9uSG92ZXIgJiYgdGhpcy5jbG9zZU9uQ2xpY2spIHsKICAgICAgICBkaXJlY3RpdmVzLnB1c2goewogICAgICAgICAgbmFtZTogJ2NsaWNrLW91dHNpZGUnLAogICAgICAgICAgdmFsdWU6IHsKICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICAgICAgICBfdGhpczIuaXNBY3RpdmUgPSBmYWxzZTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY2xvc2VDb25kaXRpb25hbDogdGhpcy5jbG9zZUNvbmRpdGlvbmFsLAogICAgICAgICAgICBpbmNsdWRlOiBmdW5jdGlvbiBpbmNsdWRlKCkgewogICAgICAgICAgICAgIHJldHVybiBbX3RoaXMyLiRlbF0uY29uY2F0KF90aGlzMi5nZXRPcGVuRGVwZW5kZW50RWxlbWVudHMoKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgICByZXR1cm4gZGlyZWN0aXZlczsKICAgIH0sCiAgICBnZW5Db250ZW50OiBmdW5jdGlvbiBnZW5Db250ZW50KCkgewogICAgICB2YXIgX09iamVjdCRhc3NpZ24sCiAgICAgICAgX3RoaXMzID0gdGhpczsKICAgICAgdmFyIG9wdGlvbnMgPSB7CiAgICAgICAgYXR0cnM6IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZ2V0U2NvcGVJZEF0dHJzKCksIHsKICAgICAgICAgIHJvbGU6ICdyb2xlJyBpbiB0aGlzLiRhdHRycyA/IHRoaXMuJGF0dHJzLnJvbGUgOiAnbWVudScKICAgICAgICB9KSwKICAgICAgICBzdGF0aWNDbGFzczogJ3YtbWVudV9fY29udGVudCcsCiAgICAgICAgY2xhc3M6IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucm9vdFRoZW1lQ2xhc3NlcywgdGhpcy5yb3VuZGVkQ2xhc3NlcywgKF9PYmplY3QkYXNzaWduID0gewogICAgICAgICAgJ3YtbWVudV9fY29udGVudC0tYXV0byc6IHRoaXMuYXV0bywKICAgICAgICAgICd2LW1lbnVfX2NvbnRlbnQtLWZpeGVkJzogdGhpcy5hY3RpdmF0b3JGaXhlZCwKICAgICAgICAgIG1lbnVhYmxlX19jb250ZW50X19hY3RpdmU6IHRoaXMuaXNBY3RpdmUKICAgICAgICB9LCBfT2JqZWN0JGFzc2lnblt0aGlzLmNvbnRlbnRDbGFzcy50cmltKCldID0gdHJ1ZSwgX09iamVjdCRhc3NpZ24pKSwKICAgICAgICBzdHlsZTogdGhpcy5zdHlsZXMsCiAgICAgICAgZGlyZWN0aXZlczogdGhpcy5nZW5EaXJlY3RpdmVzKCksCiAgICAgICAgcmVmOiAnY29udGVudCcsCiAgICAgICAgb246IHsKICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7CiAgICAgICAgICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldDsKICAgICAgICAgICAgaWYgKHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJykpIHJldHVybjsKICAgICAgICAgICAgaWYgKF90aGlzMy5jbG9zZU9uQ29udGVudENsaWNrKSBfdGhpczMuaXNBY3RpdmUgPSBmYWxzZTsKICAgICAgICAgIH0sCiAgICAgICAgICBrZXlkb3duOiB0aGlzLm9uS2V5RG93bgogICAgICAgIH0KICAgICAgfTsKICAgICAgaWYgKHRoaXMuJGxpc3RlbmVycy5zY3JvbGwpIHsKICAgICAgICBvcHRpb25zLm9uID0gb3B0aW9ucy5vbiB8fCB7fTsKICAgICAgICBvcHRpb25zLm9uLnNjcm9sbCA9IHRoaXMuJGxpc3RlbmVycy5zY3JvbGw7CiAgICAgIH0KICAgICAgaWYgKCF0aGlzLmRpc2FibGVkICYmIHRoaXMub3Blbk9uSG92ZXIpIHsKICAgICAgICBvcHRpb25zLm9uID0gb3B0aW9ucy5vbiB8fCB7fTsKICAgICAgICBvcHRpb25zLm9uLm1vdXNlZW50ZXIgPSB0aGlzLm1vdXNlRW50ZXJIYW5kbGVyOwogICAgICB9CiAgICAgIGlmICh0aGlzLm9wZW5PbkhvdmVyKSB7CiAgICAgICAgb3B0aW9ucy5vbiA9IG9wdGlvbnMub24gfHwge307CiAgICAgICAgb3B0aW9ucy5vbi5tb3VzZWxlYXZlID0gdGhpcy5tb3VzZUxlYXZlSGFuZGxlcjsKICAgICAgfQogICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywgb3B0aW9ucywgdGhpcy5nZXRDb250ZW50U2xvdCgpKTsKICAgIH0sCiAgICBnZXRUaWxlczogZnVuY3Rpb24gZ2V0VGlsZXMoKSB7CiAgICAgIGlmICghdGhpcy4kcmVmcy5jb250ZW50KSByZXR1cm47CiAgICAgIHRoaXMudGlsZXMgPSBBcnJheS5mcm9tKHRoaXMuJHJlZnMuY29udGVudC5xdWVyeVNlbGVjdG9yQWxsKCcudi1saXN0LWl0ZW0nKSk7CiAgICB9LAogICAgbW91c2VFbnRlckhhbmRsZXI6IGZ1bmN0aW9uIG1vdXNlRW50ZXJIYW5kbGVyKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgdGhpcy5ydW5EZWxheSgnb3BlbicsIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoX3RoaXM0Lmhhc0p1c3RGb2N1c2VkKSByZXR1cm47CiAgICAgICAgX3RoaXM0Lmhhc0p1c3RGb2N1c2VkID0gdHJ1ZTsKICAgICAgICBfdGhpczQuaXNBY3RpdmUgPSB0cnVlOwogICAgICB9KTsKICAgIH0sCiAgICBtb3VzZUxlYXZlSGFuZGxlcjogZnVuY3Rpb24gbW91c2VMZWF2ZUhhbmRsZXIoZSkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKICAgICAgLy8gUHJldmVudCBhY2NpZGVudGFsIHJlLWFjdGl2YXRpb24KICAgICAgdGhpcy5ydW5EZWxheSgnY2xvc2UnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKF90aGlzNS4kcmVmcy5jb250ZW50LmNvbnRhaW5zKGUucmVsYXRlZFRhcmdldCkpIHJldHVybjsKICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXM1LmlzQWN0aXZlID0gZmFsc2U7CiAgICAgICAgICBfdGhpczUuY2FsbERlYWN0aXZhdGUoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgbmV4dFRpbGU6IGZ1bmN0aW9uIG5leHRUaWxlKCkgewogICAgICB2YXIgdGlsZSA9IHRoaXMudGlsZXNbdGhpcy5saXN0SW5kZXggKyAxXTsKICAgICAgaWYgKCF0aWxlKSB7CiAgICAgICAgaWYgKCF0aGlzLnRpbGVzLmxlbmd0aCkgcmV0dXJuOwogICAgICAgIHRoaXMubGlzdEluZGV4ID0gLTE7CiAgICAgICAgdGhpcy5uZXh0VGlsZSgpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLmxpc3RJbmRleCsrOwogICAgICBpZiAodGlsZS50YWJJbmRleCA9PT0gLTEpIHRoaXMubmV4dFRpbGUoKTsKICAgIH0sCiAgICBwcmV2VGlsZTogZnVuY3Rpb24gcHJldlRpbGUoKSB7CiAgICAgIHZhciB0aWxlID0gdGhpcy50aWxlc1t0aGlzLmxpc3RJbmRleCAtIDFdOwogICAgICBpZiAoIXRpbGUpIHsKICAgICAgICBpZiAoIXRoaXMudGlsZXMubGVuZ3RoKSByZXR1cm47CiAgICAgICAgdGhpcy5saXN0SW5kZXggPSB0aGlzLnRpbGVzLmxlbmd0aDsKICAgICAgICB0aGlzLnByZXZUaWxlKCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMubGlzdEluZGV4LS07CiAgICAgIGlmICh0aWxlLnRhYkluZGV4ID09PSAtMSkgdGhpcy5wcmV2VGlsZSgpOwogICAgfSwKICAgIG9uS2V5RG93bjogZnVuY3Rpb24gb25LZXlEb3duKGUpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CiAgICAgIGlmIChlLmtleUNvZGUgPT09IGtleUNvZGVzLmVzYykgewogICAgICAgIC8vIFdhaXQgZm9yIGRlcGVuZGVudCBlbGVtZW50cyB0byBjbG9zZSBmaXJzdAogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXM2LmlzQWN0aXZlID0gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIGFjdGl2YXRvciA9IHRoaXMuZ2V0QWN0aXZhdG9yKCk7CiAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIGFjdGl2YXRvciAmJiBhY3RpdmF0b3IuZm9jdXMoKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICghdGhpcy5pc0FjdGl2ZSAmJiBba2V5Q29kZXMudXAsIGtleUNvZGVzLmRvd25dLmluY2x1ZGVzKGUua2V5Q29kZSkpIHsKICAgICAgICB0aGlzLmlzQWN0aXZlID0gdHJ1ZTsKICAgICAgfSAvLyBBbGxvdyBmb3IgaXNBY3RpdmUgd2F0Y2hlciB0byBnZW5lcmF0ZSB0aWxlIGxpc3QKCiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXM2LmNoYW5nZUxpc3RJbmRleChlKTsKICAgICAgfSk7CiAgICB9LAogICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkgewogICAgICBpZiAoIXRoaXMuaXNBY3RpdmUpIHJldHVybjsgLy8gQWNjb3VudCBmb3Igc2NyZWVuIHJlc2l6ZQogICAgICAvLyBhbmQgb3JpZW50YXRpb24gY2hhbmdlCiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtZXhwcmVzc2lvbnMKCiAgICAgIHRoaXMuJHJlZnMuY29udGVudC5vZmZzZXRXaWR0aDsKICAgICAgdGhpcy51cGRhdGVEaW1lbnNpb25zKCk7IC8vIFdoZW4gcmVzaXppbmcgdG8gYSBzbWFsbGVyIHdpZHRoCiAgICAgIC8vIGNvbnRlbnQgd2lkdGggaXMgZXZhbHVhdGVkIGJlZm9yZQogICAgICAvLyB0aGUgbmV3IGFjdGl2YXRvciB3aWR0aCBoYXMgYmVlbgogICAgICAvLyBzZXQsIGNhdXNpbmcgaXQgdG8gbm90IHNpemUgcHJvcGVybHkKICAgICAgLy8gaGFja3kgYnV0IHdpbGwgcmV2aXNpdCBpbiB0aGUgZnV0dXJlCgogICAgICBjbGVhclRpbWVvdXQodGhpcy5yZXNpemVUaW1lb3V0KTsKICAgICAgdGhpcy5yZXNpemVUaW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQodGhpcy51cGRhdGVEaW1lbnNpb25zLCAxMDApOwogICAgfQogIH0sCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkgewogICAgdmFyIF90aGlzNyA9IHRoaXM7CiAgICB2YXIgZGF0YSA9IHsKICAgICAgc3RhdGljQ2xhc3M6ICd2LW1lbnUnLAogICAgICBjbGFzczogewogICAgICAgICd2LW1lbnUtLWF0dGFjaGVkJzogdGhpcy5hdHRhY2ggPT09ICcnIHx8IHRoaXMuYXR0YWNoID09PSB0cnVlIHx8IHRoaXMuYXR0YWNoID09PSAnYXR0YWNoJwogICAgICB9LAogICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgIGFyZzogJzUwMCcsCiAgICAgICAgbmFtZTogJ3Jlc2l6ZScsCiAgICAgICAgdmFsdWU6IHRoaXMub25SZXNpemUKICAgICAgfV0KICAgIH07CiAgICByZXR1cm4gaCgnZGl2JywgZGF0YSwgWyF0aGlzLmFjdGl2YXRvciAmJiB0aGlzLmdlbkFjdGl2YXRvcigpLCB0aGlzLnNob3dMYXp5Q29udGVudChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX3RoaXM3LiRjcmVhdGVFbGVtZW50KFZUaGVtZVByb3ZpZGVyLCB7CiAgICAgICAgcHJvcHM6IHsKICAgICAgICAgIHJvb3Q6IHRydWUsCiAgICAgICAgICBsaWdodDogX3RoaXM3LmxpZ2h0LAogICAgICAgICAgZGFyazogX3RoaXM3LmRhcmsKICAgICAgICB9CiAgICAgIH0sIFtfdGhpczcuZ2VuVHJhbnNpdGlvbigpXSldOwogICAgfSldKTsKICB9Cn0pOw=="},null]}