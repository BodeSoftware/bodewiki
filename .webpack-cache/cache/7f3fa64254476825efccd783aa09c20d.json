{"remainingRequest":"/Users/shanebeal/Desktop/bodewiki/node_modules/babel-loader/lib/index.js??ref--0-1!/Users/shanebeal/Desktop/bodewiki/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanebeal/Desktop/bodewiki/client/components/editor/editor-bode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanebeal/Desktop/bodewiki/client/components/editor/editor-bode.vue","mtime":1742884358260},{"path":"/Users/shanebeal/Desktop/bodewiki/.babelrc","mtime":1742797763162},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/cache-loader/dist/cjs.js","mtime":1743632217742},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/babel-loader/lib/index.js","mtime":1743632218430},{"path":"/Users/shanebeal/Desktop/bodewiki/node_modules/vue-loader/lib/index.js","mtime":1743632218723}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9nZXQgZnJvbSAibG9kYXNoL2dldCI7IC8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyTG9vc2UociwgZSkgeyB2YXIgdCA9ICJ1bmRlZmluZWQiICE9IHR5cGVvZiBTeW1ib2wgJiYgcltTeW1ib2wuaXRlcmF0b3JdIHx8IHJbIkBAaXRlcmF0b3IiXTsgaWYgKHQpIHJldHVybiAodCA9IHQuY2FsbChyKSkubmV4dC5iaW5kKHQpOyBpZiAoQXJyYXkuaXNBcnJheShyKSB8fCAodCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyKSkgfHwgZSAmJiByICYmICJudW1iZXIiID09IHR5cGVvZiByLmxlbmd0aCkgeyB0ICYmIChyID0gdCk7IHZhciBvID0gMDsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIG8gPj0gci5sZW5ndGggPyB7IGRvbmU6ICEwIH0gOiB7IGRvbmU6ICExLCB2YWx1ZTogcltvKytdIH07IH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9CmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyLCBhKSB7IGlmIChyKSB7IGlmICgic3RyaW5nIiA9PSB0eXBlb2YgcikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KHIsIGEpOyB2YXIgdCA9IHt9LnRvU3RyaW5nLmNhbGwocikuc2xpY2UoOCwgLTEpOyByZXR1cm4gIk9iamVjdCIgPT09IHQgJiYgci5jb25zdHJ1Y3RvciAmJiAodCA9IHIuY29uc3RydWN0b3IubmFtZSksICJNYXAiID09PSB0IHx8ICJTZXQiID09PSB0ID8gQXJyYXkuZnJvbShyKSA6ICJBcmd1bWVudHMiID09PSB0IHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHQpID8gX2FycmF5TGlrZVRvQXJyYXkociwgYSkgOiB2b2lkIDA7IH0gfQpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShyLCBhKSB7IChudWxsID09IGEgfHwgYSA+IHIubGVuZ3RoKSAmJiAoYSA9IHIubGVuZ3RoKTsgZm9yICh2YXIgZSA9IDAsIG4gPSBBcnJheShhKTsgZSA8IGE7IGUrKykgbltlXSA9IHJbZV07IHJldHVybiBuOyB9CmZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7ICJ1c2Ugc3RyaWN0IjsgLyohIHJlZ2VuZXJhdG9yLXJ1bnRpbWUgLS0gQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuIC0tIGxpY2Vuc2UgKE1JVCk6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9ibG9iL21haW4vTElDRU5TRSAqLyBfcmVnZW5lcmF0b3JSdW50aW1lID0gZnVuY3Rpb24gX3JlZ2VuZXJhdG9yUnVudGltZSgpIHsgcmV0dXJuIGU7IH07IHZhciB0LCBlID0ge30sIHIgPSBPYmplY3QucHJvdG90eXBlLCBuID0gci5oYXNPd25Qcm9wZXJ0eSwgbyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSB8fCBmdW5jdGlvbiAodCwgZSwgcikgeyB0W2VdID0gci52YWx1ZTsgfSwgaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIFN5bWJvbCA/IFN5bWJvbCA6IHt9LCBhID0gaS5pdGVyYXRvciB8fCAiQEBpdGVyYXRvciIsIGMgPSBpLmFzeW5jSXRlcmF0b3IgfHwgIkBAYXN5bmNJdGVyYXRvciIsIHUgPSBpLnRvU3RyaW5nVGFnIHx8ICJAQHRvU3RyaW5nVGFnIjsgZnVuY3Rpb24gZGVmaW5lKHQsIGUsIHIpIHsgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBlLCB7IHZhbHVlOiByLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pLCB0W2VdOyB9IHRyeSB7IGRlZmluZSh7fSwgIiIpOyB9IGNhdGNoICh0KSB7IGRlZmluZSA9IGZ1bmN0aW9uIGRlZmluZSh0LCBlLCByKSB7IHJldHVybiB0W2VdID0gcjsgfTsgfSBmdW5jdGlvbiB3cmFwKHQsIGUsIHIsIG4pIHsgdmFyIGkgPSBlICYmIGUucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yID8gZSA6IEdlbmVyYXRvciwgYSA9IE9iamVjdC5jcmVhdGUoaS5wcm90b3R5cGUpLCBjID0gbmV3IENvbnRleHQobiB8fCBbXSk7IHJldHVybiBvKGEsICJfaW52b2tlIiwgeyB2YWx1ZTogbWFrZUludm9rZU1ldGhvZCh0LCByLCBjKSB9KSwgYTsgfSBmdW5jdGlvbiB0cnlDYXRjaCh0LCBlLCByKSB7IHRyeSB7IHJldHVybiB7IHR5cGU6ICJub3JtYWwiLCBhcmc6IHQuY2FsbChlLCByKSB9OyB9IGNhdGNoICh0KSB7IHJldHVybiB7IHR5cGU6ICJ0aHJvdyIsIGFyZzogdCB9OyB9IH0gZS53cmFwID0gd3JhcDsgdmFyIGggPSAic3VzcGVuZGVkU3RhcnQiLCBsID0gInN1c3BlbmRlZFlpZWxkIiwgZiA9ICJleGVjdXRpbmciLCBzID0gImNvbXBsZXRlZCIsIHkgPSB7fTsgZnVuY3Rpb24gR2VuZXJhdG9yKCkge30gZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fSBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9IHZhciBwID0ge307IGRlZmluZShwLCBhLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTsgdmFyIGQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YsIHYgPSBkICYmIGQoZCh2YWx1ZXMoW10pKSk7IHYgJiYgdiAhPT0gciAmJiBuLmNhbGwodiwgYSkgJiYgKHAgPSB2KTsgdmFyIGcgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5wcm90b3R5cGUgPSBHZW5lcmF0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwKTsgZnVuY3Rpb24gZGVmaW5lSXRlcmF0b3JNZXRob2RzKHQpIHsgWyJuZXh0IiwgInRocm93IiwgInJldHVybiJdLmZvckVhY2goZnVuY3Rpb24gKGUpIHsgZGVmaW5lKHQsIGUsIGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLl9pbnZva2UoZSwgdCk7IH0pOyB9KTsgfSBmdW5jdGlvbiBBc3luY0l0ZXJhdG9yKHQsIGUpIHsgZnVuY3Rpb24gaW52b2tlKHIsIG8sIGksIGEpIHsgdmFyIGMgPSB0cnlDYXRjaCh0W3JdLCB0LCBvKTsgaWYgKCJ0aHJvdyIgIT09IGMudHlwZSkgeyB2YXIgdSA9IGMuYXJnLCBoID0gdS52YWx1ZTsgcmV0dXJuIGggJiYgIm9iamVjdCIgPT0gdHlwZW9mIGggJiYgbi5jYWxsKGgsICJfX2F3YWl0IikgPyBlLnJlc29sdmUoaC5fX2F3YWl0KS50aGVuKGZ1bmN0aW9uICh0KSB7IGludm9rZSgibmV4dCIsIHQsIGksIGEpOyB9LCBmdW5jdGlvbiAodCkgeyBpbnZva2UoInRocm93IiwgdCwgaSwgYSk7IH0pIDogZS5yZXNvbHZlKGgpLnRoZW4oZnVuY3Rpb24gKHQpIHsgdS52YWx1ZSA9IHQsIGkodSk7IH0sIGZ1bmN0aW9uICh0KSB7IHJldHVybiBpbnZva2UoInRocm93IiwgdCwgaSwgYSk7IH0pOyB9IGEoYy5hcmcpOyB9IHZhciByOyBvKHRoaXMsICJfaW52b2tlIiwgeyB2YWx1ZTogZnVuY3Rpb24gdmFsdWUodCwgbikgeyBmdW5jdGlvbiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpIHsgcmV0dXJuIG5ldyBlKGZ1bmN0aW9uIChlLCByKSB7IGludm9rZSh0LCBuLCBlLCByKTsgfSk7IH0gcmV0dXJuIHIgPSByID8gci50aGVuKGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLCBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZykgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpOyB9IH0pOyB9IGZ1bmN0aW9uIG1ha2VJbnZva2VNZXRob2QoZSwgciwgbikgeyB2YXIgbyA9IGg7IHJldHVybiBmdW5jdGlvbiAoaSwgYSkgeyBpZiAobyA9PT0gZikgdGhyb3cgRXJyb3IoIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmciKTsgaWYgKG8gPT09IHMpIHsgaWYgKCJ0aHJvdyIgPT09IGkpIHRocm93IGE7IHJldHVybiB7IHZhbHVlOiB0LCBkb25lOiAhMCB9OyB9IGZvciAobi5tZXRob2QgPSBpLCBuLmFyZyA9IGE7OykgeyB2YXIgYyA9IG4uZGVsZWdhdGU7IGlmIChjKSB7IHZhciB1ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShjLCBuKTsgaWYgKHUpIHsgaWYgKHUgPT09IHkpIGNvbnRpbnVlOyByZXR1cm4gdTsgfSB9IGlmICgibmV4dCIgPT09IG4ubWV0aG9kKSBuLnNlbnQgPSBuLl9zZW50ID0gbi5hcmc7ZWxzZSBpZiAoInRocm93IiA9PT0gbi5tZXRob2QpIHsgaWYgKG8gPT09IGgpIHRocm93IG8gPSBzLCBuLmFyZzsgbi5kaXNwYXRjaEV4Y2VwdGlvbihuLmFyZyk7IH0gZWxzZSAicmV0dXJuIiA9PT0gbi5tZXRob2QgJiYgbi5hYnJ1cHQoInJldHVybiIsIG4uYXJnKTsgbyA9IGY7IHZhciBwID0gdHJ5Q2F0Y2goZSwgciwgbik7IGlmICgibm9ybWFsIiA9PT0gcC50eXBlKSB7IGlmIChvID0gbi5kb25lID8gcyA6IGwsIHAuYXJnID09PSB5KSBjb250aW51ZTsgcmV0dXJuIHsgdmFsdWU6IHAuYXJnLCBkb25lOiBuLmRvbmUgfTsgfSAidGhyb3ciID09PSBwLnR5cGUgJiYgKG8gPSBzLCBuLm1ldGhvZCA9ICJ0aHJvdyIsIG4uYXJnID0gcC5hcmcpOyB9IH07IH0gZnVuY3Rpb24gbWF5YmVJbnZva2VEZWxlZ2F0ZShlLCByKSB7IHZhciBuID0gci5tZXRob2QsIG8gPSBlLml0ZXJhdG9yW25dOyBpZiAobyA9PT0gdCkgcmV0dXJuIHIuZGVsZWdhdGUgPSBudWxsLCAidGhyb3ciID09PSBuICYmIGUuaXRlcmF0b3IucmV0dXJuICYmIChyLm1ldGhvZCA9ICJyZXR1cm4iLCByLmFyZyA9IHQsIG1heWJlSW52b2tlRGVsZWdhdGUoZSwgciksICJ0aHJvdyIgPT09IHIubWV0aG9kKSB8fCAicmV0dXJuIiAhPT0gbiAmJiAoci5tZXRob2QgPSAidGhyb3ciLCByLmFyZyA9IG5ldyBUeXBlRXJyb3IoIlRoZSBpdGVyYXRvciBkb2VzIG5vdCBwcm92aWRlIGEgJyIgKyBuICsgIicgbWV0aG9kIikpLCB5OyB2YXIgaSA9IHRyeUNhdGNoKG8sIGUuaXRlcmF0b3IsIHIuYXJnKTsgaWYgKCJ0aHJvdyIgPT09IGkudHlwZSkgcmV0dXJuIHIubWV0aG9kID0gInRocm93Iiwgci5hcmcgPSBpLmFyZywgci5kZWxlZ2F0ZSA9IG51bGwsIHk7IHZhciBhID0gaS5hcmc7IHJldHVybiBhID8gYS5kb25lID8gKHJbZS5yZXN1bHROYW1lXSA9IGEudmFsdWUsIHIubmV4dCA9IGUubmV4dExvYywgInJldHVybiIgIT09IHIubWV0aG9kICYmIChyLm1ldGhvZCA9ICJuZXh0Iiwgci5hcmcgPSB0KSwgci5kZWxlZ2F0ZSA9IG51bGwsIHkpIDogYSA6IChyLm1ldGhvZCA9ICJ0aHJvdyIsIHIuYXJnID0gbmV3IFR5cGVFcnJvcigiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3QiKSwgci5kZWxlZ2F0ZSA9IG51bGwsIHkpOyB9IGZ1bmN0aW9uIHB1c2hUcnlFbnRyeSh0KSB7IHZhciBlID0geyB0cnlMb2M6IHRbMF0gfTsgMSBpbiB0ICYmIChlLmNhdGNoTG9jID0gdFsxXSksIDIgaW4gdCAmJiAoZS5maW5hbGx5TG9jID0gdFsyXSwgZS5hZnRlckxvYyA9IHRbM10pLCB0aGlzLnRyeUVudHJpZXMucHVzaChlKTsgfSBmdW5jdGlvbiByZXNldFRyeUVudHJ5KHQpIHsgdmFyIGUgPSB0LmNvbXBsZXRpb24gfHwge307IGUudHlwZSA9ICJub3JtYWwiLCBkZWxldGUgZS5hcmcsIHQuY29tcGxldGlvbiA9IGU7IH0gZnVuY3Rpb24gQ29udGV4dCh0KSB7IHRoaXMudHJ5RW50cmllcyA9IFt7IHRyeUxvYzogInJvb3QiIH1dLCB0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKSwgdGhpcy5yZXNldCghMCk7IH0gZnVuY3Rpb24gdmFsdWVzKGUpIHsgaWYgKGUgfHwgIiIgPT09IGUpIHsgdmFyIHIgPSBlW2FdOyBpZiAocikgcmV0dXJuIHIuY2FsbChlKTsgaWYgKCJmdW5jdGlvbiIgPT0gdHlwZW9mIGUubmV4dCkgcmV0dXJuIGU7IGlmICghaXNOYU4oZS5sZW5ndGgpKSB7IHZhciBvID0gLTEsIGkgPSBmdW5jdGlvbiBuZXh0KCkgeyBmb3IgKDsgKytvIDwgZS5sZW5ndGg7KSBpZiAobi5jYWxsKGUsIG8pKSByZXR1cm4gbmV4dC52YWx1ZSA9IGVbb10sIG5leHQuZG9uZSA9ICExLCBuZXh0OyByZXR1cm4gbmV4dC52YWx1ZSA9IHQsIG5leHQuZG9uZSA9ICEwLCBuZXh0OyB9OyByZXR1cm4gaS5uZXh0ID0gaTsgfSB9IHRocm93IG5ldyBUeXBlRXJyb3IodHlwZW9mIGUgKyAiIGlzIG5vdCBpdGVyYWJsZSIpOyB9IHJldHVybiBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgbyhnLCAiY29uc3RydWN0b3IiLCB7IHZhbHVlOiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgY29uZmlndXJhYmxlOiAhMCB9KSwgbyhHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgImNvbnN0cnVjdG9yIiwgeyB2YWx1ZTogR2VuZXJhdG9yRnVuY3Rpb24sIGNvbmZpZ3VyYWJsZTogITAgfSksIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gZGVmaW5lKEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCB1LCAiR2VuZXJhdG9yRnVuY3Rpb24iKSwgZS5pc0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ICYmIHQuY29uc3RydWN0b3I7IHJldHVybiAhIWUgJiYgKGUgPT09IEdlbmVyYXRvckZ1bmN0aW9uIHx8ICJHZW5lcmF0b3JGdW5jdGlvbiIgPT09IChlLmRpc3BsYXlOYW1lIHx8IGUubmFtZSkpOyB9LCBlLm1hcmsgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHQsIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKSA6ICh0Ll9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBkZWZpbmUodCwgdSwgIkdlbmVyYXRvckZ1bmN0aW9uIikpLCB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZyksIHQ7IH0sIGUuYXdyYXAgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4geyBfX2F3YWl0OiB0IH07IH0sIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSksIGRlZmluZShBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSwgYywgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSksIGUuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3IsIGUuYXN5bmMgPSBmdW5jdGlvbiAodCwgciwgbiwgbywgaSkgeyB2b2lkIDAgPT09IGkgJiYgKGkgPSBQcm9taXNlKTsgdmFyIGEgPSBuZXcgQXN5bmNJdGVyYXRvcih3cmFwKHQsIHIsIG4sIG8pLCBpKTsgcmV0dXJuIGUuaXNHZW5lcmF0b3JGdW5jdGlvbihyKSA/IGEgOiBhLm5leHQoKS50aGVuKGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmRvbmUgPyB0LnZhbHVlIDogYS5uZXh0KCk7IH0pOyB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoZyksIGRlZmluZShnLCB1LCAiR2VuZXJhdG9yIiksIGRlZmluZShnLCBhLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KSwgZGVmaW5lKGcsICJ0b1N0cmluZyIsIGZ1bmN0aW9uICgpIHsgcmV0dXJuICJbb2JqZWN0IEdlbmVyYXRvcl0iOyB9KSwgZS5rZXlzID0gZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSBPYmplY3QodCksIHIgPSBbXTsgZm9yICh2YXIgbiBpbiBlKSByLnB1c2gobik7IHJldHVybiByLnJldmVyc2UoKSwgZnVuY3Rpb24gbmV4dCgpIHsgZm9yICg7IHIubGVuZ3RoOykgeyB2YXIgdCA9IHIucG9wKCk7IGlmICh0IGluIGUpIHJldHVybiBuZXh0LnZhbHVlID0gdCwgbmV4dC5kb25lID0gITEsIG5leHQ7IH0gcmV0dXJuIG5leHQuZG9uZSA9ICEwLCBuZXh0OyB9OyB9LCBlLnZhbHVlcyA9IHZhbHVlcywgQ29udGV4dC5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBDb250ZXh0LCByZXNldDogZnVuY3Rpb24gcmVzZXQoZSkgeyBpZiAodGhpcy5wcmV2ID0gMCwgdGhpcy5uZXh0ID0gMCwgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHQsIHRoaXMuZG9uZSA9ICExLCB0aGlzLmRlbGVnYXRlID0gbnVsbCwgdGhpcy5tZXRob2QgPSAibmV4dCIsIHRoaXMuYXJnID0gdCwgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSksICFlKSBmb3IgKHZhciByIGluIHRoaXMpICJ0IiA9PT0gci5jaGFyQXQoMCkgJiYgbi5jYWxsKHRoaXMsIHIpICYmICFpc05hTigrci5zbGljZSgxKSkgJiYgKHRoaXNbcl0gPSB0KTsgfSwgc3RvcDogZnVuY3Rpb24gc3RvcCgpIHsgdGhpcy5kb25lID0gITA7IHZhciB0ID0gdGhpcy50cnlFbnRyaWVzWzBdLmNvbXBsZXRpb247IGlmICgidGhyb3ciID09PSB0LnR5cGUpIHRocm93IHQuYXJnOyByZXR1cm4gdGhpcy5ydmFsOyB9LCBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24gZGlzcGF0Y2hFeGNlcHRpb24oZSkgeyBpZiAodGhpcy5kb25lKSB0aHJvdyBlOyB2YXIgciA9IHRoaXM7IGZ1bmN0aW9uIGhhbmRsZShuLCBvKSB7IHJldHVybiBhLnR5cGUgPSAidGhyb3ciLCBhLmFyZyA9IGUsIHIubmV4dCA9IG4sIG8gJiYgKHIubWV0aG9kID0gIm5leHQiLCByLmFyZyA9IHQpLCAhIW87IH0gZm9yICh2YXIgbyA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBvID49IDA7IC0tbykgeyB2YXIgaSA9IHRoaXMudHJ5RW50cmllc1tvXSwgYSA9IGkuY29tcGxldGlvbjsgaWYgKCJyb290IiA9PT0gaS50cnlMb2MpIHJldHVybiBoYW5kbGUoImVuZCIpOyBpZiAoaS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7IHZhciBjID0gbi5jYWxsKGksICJjYXRjaExvYyIpLCB1ID0gbi5jYWxsKGksICJmaW5hbGx5TG9jIik7IGlmIChjICYmIHUpIHsgaWYgKHRoaXMucHJldiA8IGkuY2F0Y2hMb2MpIHJldHVybiBoYW5kbGUoaS5jYXRjaExvYywgITApOyBpZiAodGhpcy5wcmV2IDwgaS5maW5hbGx5TG9jKSByZXR1cm4gaGFuZGxlKGkuZmluYWxseUxvYyk7IH0gZWxzZSBpZiAoYykgeyBpZiAodGhpcy5wcmV2IDwgaS5jYXRjaExvYykgcmV0dXJuIGhhbmRsZShpLmNhdGNoTG9jLCAhMCk7IH0gZWxzZSB7IGlmICghdSkgdGhyb3cgRXJyb3IoInRyeSBzdGF0ZW1lbnQgd2l0aG91dCBjYXRjaCBvciBmaW5hbGx5Iik7IGlmICh0aGlzLnByZXYgPCBpLmZpbmFsbHlMb2MpIHJldHVybiBoYW5kbGUoaS5maW5hbGx5TG9jKTsgfSB9IH0gfSwgYWJydXB0OiBmdW5jdGlvbiBhYnJ1cHQodCwgZSkgeyBmb3IgKHZhciByID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IHIgPj0gMDsgLS1yKSB7IHZhciBvID0gdGhpcy50cnlFbnRyaWVzW3JdOyBpZiAoby50cnlMb2MgPD0gdGhpcy5wcmV2ICYmIG4uY2FsbChvLCAiZmluYWxseUxvYyIpICYmIHRoaXMucHJldiA8IG8uZmluYWxseUxvYykgeyB2YXIgaSA9IG87IGJyZWFrOyB9IH0gaSAmJiAoImJyZWFrIiA9PT0gdCB8fCAiY29udGludWUiID09PSB0KSAmJiBpLnRyeUxvYyA8PSBlICYmIGUgPD0gaS5maW5hbGx5TG9jICYmIChpID0gbnVsbCk7IHZhciBhID0gaSA/IGkuY29tcGxldGlvbiA6IHt9OyByZXR1cm4gYS50eXBlID0gdCwgYS5hcmcgPSBlLCBpID8gKHRoaXMubWV0aG9kID0gIm5leHQiLCB0aGlzLm5leHQgPSBpLmZpbmFsbHlMb2MsIHkpIDogdGhpcy5jb21wbGV0ZShhKTsgfSwgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHQsIGUpIHsgaWYgKCJ0aHJvdyIgPT09IHQudHlwZSkgdGhyb3cgdC5hcmc7IHJldHVybiAiYnJlYWsiID09PSB0LnR5cGUgfHwgImNvbnRpbnVlIiA9PT0gdC50eXBlID8gdGhpcy5uZXh0ID0gdC5hcmcgOiAicmV0dXJuIiA9PT0gdC50eXBlID8gKHRoaXMucnZhbCA9IHRoaXMuYXJnID0gdC5hcmcsIHRoaXMubWV0aG9kID0gInJldHVybiIsIHRoaXMubmV4dCA9ICJlbmQiKSA6ICJub3JtYWwiID09PSB0LnR5cGUgJiYgZSAmJiAodGhpcy5uZXh0ID0gZSksIHk7IH0sIGZpbmlzaDogZnVuY3Rpb24gZmluaXNoKHQpIHsgZm9yICh2YXIgZSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBlID49IDA7IC0tZSkgeyB2YXIgciA9IHRoaXMudHJ5RW50cmllc1tlXTsgaWYgKHIuZmluYWxseUxvYyA9PT0gdCkgcmV0dXJuIHRoaXMuY29tcGxldGUoci5jb21wbGV0aW9uLCByLmFmdGVyTG9jKSwgcmVzZXRUcnlFbnRyeShyKSwgeTsgfSB9LCBjYXRjaDogZnVuY3Rpb24gX2NhdGNoKHQpIHsgZm9yICh2YXIgZSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBlID49IDA7IC0tZSkgeyB2YXIgciA9IHRoaXMudHJ5RW50cmllc1tlXTsgaWYgKHIudHJ5TG9jID09PSB0KSB7IHZhciBuID0gci5jb21wbGV0aW9uOyBpZiAoInRocm93IiA9PT0gbi50eXBlKSB7IHZhciBvID0gbi5hcmc7IHJlc2V0VHJ5RW50cnkocik7IH0gcmV0dXJuIG87IH0gfSB0aHJvdyBFcnJvcigiaWxsZWdhbCBjYXRjaCBhdHRlbXB0Iik7IH0sIGRlbGVnYXRlWWllbGQ6IGZ1bmN0aW9uIGRlbGVnYXRlWWllbGQoZSwgciwgbikgeyByZXR1cm4gdGhpcy5kZWxlZ2F0ZSA9IHsgaXRlcmF0b3I6IHZhbHVlcyhlKSwgcmVzdWx0TmFtZTogciwgbmV4dExvYzogbiB9LCAibmV4dCIgPT09IHRoaXMubWV0aG9kICYmICh0aGlzLmFyZyA9IHQpLCB5OyB9IH0sIGU7IH0KZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKG4sIHQsIGUsIHIsIG8sIGEsIGMpIHsgdHJ5IHsgdmFyIGkgPSBuW2FdKGMpLCB1ID0gaS52YWx1ZTsgfSBjYXRjaCAobikgeyByZXR1cm4gdm9pZCBlKG4pOyB9IGkuZG9uZSA/IHQodSkgOiBQcm9taXNlLnJlc29sdmUodSkudGhlbihyLCBvKTsgfQpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcywgZSA9IGFyZ3VtZW50czsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyLCBvKSB7IHZhciBhID0gbi5hcHBseSh0LCBlKTsgZnVuY3Rpb24gX25leHQobikgeyBhc3luY0dlbmVyYXRvclN0ZXAoYSwgciwgbywgX25leHQsIF90aHJvdywgIm5leHQiLCBuKTsgfSBmdW5jdGlvbiBfdGhyb3cobikgeyBhc3luY0dlbmVyYXRvclN0ZXAoYSwgciwgbywgX25leHQsIF90aHJvdywgInRocm93Iiwgbik7IH0gX25leHQodm9pZCAwKTsgfSk7IH07IH0KaW1wb3J0IHsgZ2V0LCBzeW5jIH0gZnJvbSAndnVleC1wYXRoaWZ5JzsKaW1wb3J0IHsgRWRpdG9yIH0gZnJvbSAnQHRpcHRhcC92dWUtMic7CmltcG9ydCBTdGFydGVyS2l0IGZyb20gJ0B0aXB0YXAvc3RhcnRlci1raXQnOwppbXBvcnQgUGxhY2Vob2xkZXIgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tcGxhY2Vob2xkZXInOwppbXBvcnQgSW1hZ2UgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24taW1hZ2UnOwppbXBvcnQgTGluayBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi1saW5rJzsKaW1wb3J0IFRhYmxlIGZyb20gJ0B0aXB0YXAvZXh0ZW5zaW9uLXRhYmxlJzsKaW1wb3J0IFRhYmxlUm93IGZyb20gJ0B0aXB0YXAvZXh0ZW5zaW9uLXRhYmxlLXJvdyc7CmltcG9ydCBUYWJsZUNlbGwgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tdGFibGUtY2VsbCc7CmltcG9ydCBUYWJsZUhlYWRlciBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi10YWJsZS1oZWFkZXInOwppbXBvcnQgVGV4dFN0eWxlIGZyb20gJ0B0aXB0YXAvZXh0ZW5zaW9uLXRleHQtc3R5bGUnOwppbXBvcnQgQ29sb3IgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tY29sb3InOwppbXBvcnQgRm9udEZhbWlseSBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi1mb250LWZhbWlseSc7CmltcG9ydCBUZXh0QWxpZ24gZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tdGV4dC1hbGlnbic7CmltcG9ydCBIaWdobGlnaHQgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24taGlnaGxpZ2h0JzsKaW1wb3J0IFN1YnNjcmlwdCBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi1zdWJzY3JpcHQnOwppbXBvcnQgU3VwZXJzY3JpcHQgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tc3VwZXJzY3JpcHQnOwppbXBvcnQgVGFza0xpc3QgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tdGFzay1saXN0JzsKaW1wb3J0IFRhc2tJdGVtIGZyb20gJ0B0aXB0YXAvZXh0ZW5zaW9uLXRhc2staXRlbSc7CmltcG9ydCBDb2RlQmxvY2tMb3dsaWdodCBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi1jb2RlLWJsb2NrLWxvd2xpZ2h0JzsKaW1wb3J0IHsgbG93bGlnaHQgfSBmcm9tICdsb3dsaWdodCc7CmltcG9ydCB7IGh0bWwgYXMgYmVhdXRpZnkgfSBmcm9tICdqcy1iZWF1dGlmeSc7CmltcG9ydCBFZGl0b3JCb2RlVG9vbGJhciBmcm9tICcuL2JvZGUvdG9vbGJhci52dWUnOwppbXBvcnQgU2xhc2hDb21tYW5kIGZyb20gJy4vYm9kZS9zbGFzaC1jb21tYW5kLnZ1ZSc7CmltcG9ydCBJbmZvQm94IGZyb20gJy4vYm9kZS9pbmZvLWJveC52dWUnOwppbXBvcnQgRXhwYW5kQ29sbGFwc2UgZnJvbSAnLi9ib2RlL2V4cGFuZC1jb2xsYXBzZS52dWUnOwppbXBvcnQgUGFnZVRyZWUgZnJvbSAnLi9ib2RlL3BhZ2UtdHJlZS52dWUnOwppbXBvcnQgQ29tbWVudHMgZnJvbSAnLi9ib2RlL2NvbW1lbnRzLnZ1ZSc7CmltcG9ydCBWZXJzaW9uSGlzdG9yeSBmcm9tICcuL2JvZGUvdmVyc2lvbi1oaXN0b3J5LnZ1ZSc7CmltcG9ydCBTZWFyY2hCYXIgZnJvbSAnLi9ib2RlL3NlYXJjaC1iYXIudnVlJzsKaW1wb3J0IEVkaXRvckNvbmZsaWN0IGZyb20gJy4vYm9kZS9jb25mbGljdC52dWUnOwoKLyogZ2xvYmFsIHNpdGVMYW5ncywgV0lLSSAqLwoKLy8gQ29uZmlndXJlIENvZGVCbG9ja0xvd2xpZ2h0IHdpdGggbG93bGlnaHQKQ29kZUJsb2NrTG93bGlnaHQuY29uZmlndXJlKHsKICBsb3dsaWdodDogbG93bGlnaHQKfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRWRpdG9yQm9kZScsCiAgY29tcG9uZW50czogewogICAgRWRpdG9yQm9kZVRvb2xiYXI6IEVkaXRvckJvZGVUb29sYmFyLAogICAgU2xhc2hDb21tYW5kOiBTbGFzaENvbW1hbmQsCiAgICBJbmZvQm94OiBJbmZvQm94LAogICAgRXhwYW5kQ29sbGFwc2U6IEV4cGFuZENvbGxhcHNlLAogICAgUGFnZVRyZWU6IFBhZ2VUcmVlLAogICAgQ29tbWVudHM6IENvbW1lbnRzLAogICAgVmVyc2lvbkhpc3Rvcnk6IFZlcnNpb25IaXN0b3J5LAogICAgU2VhcmNoQmFyOiBTZWFyY2hCYXIsCiAgICBFZGl0b3JDb25mbGljdDogRWRpdG9yQ29uZmxpY3QKICB9LAogIHByb3BzOiB7CiAgICBzYXZlOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHt9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWRpdG9yOiBudWxsLAogICAgICBpc0VkaXRvclJlYWR5OiBmYWxzZSwKICAgICAgc3RhdHM6IHsKICAgICAgICBjaGFyYWN0ZXJzOiAwLAogICAgICAgIHdvcmRzOiAwCiAgICAgIH0sCiAgICAgIGNvbnRlbnQ6ICcnLAogICAgICBpc0NvbmZsaWN0OiBmYWxzZSwKICAgICAgaW5zZXJ0TGlua0RpYWxvZzogZmFsc2UsCiAgICAgIHNsYXNoQ29tbWFuZEFjdGl2ZTogZmFsc2UsCiAgICAgIHNsYXNoQ29tbWFuZFBvc2l0aW9uOiB7CiAgICAgICAgeDogMCwKICAgICAgICB5OiAwCiAgICAgIH0sCiAgICAgIHNsYXNoQ29tbWFuZFF1ZXJ5OiAnJywKICAgICAgc2xhc2hDb21tYW5kUmFuZ2U6IG51bGwsCiAgICAgIHNob3dQYWdlVHJlZTogZmFsc2UsCiAgICAgIHNob3dDb21tZW50czogZmFsc2UsCiAgICAgIHNob3dWZXJzaW9uSGlzdG9yeTogZmFsc2UsCiAgICAgIHNob3dTZWFyY2g6IGZhbHNlLAogICAgICBjdXJyZW50VmVyc2lvbjogbnVsbCwKICAgICAgY29tbWVudHM6IFtdLAogICAgICB2ZXJzaW9uczogW10sCiAgICAgIHNlYXJjaFJlc3VsdHM6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzTW9iaWxlOiBmdW5jdGlvbiBpc01vYmlsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludC5zbUFuZERvd247CiAgICB9LAogICAgbG9jYWxlOiBnZXQoJ3BhZ2UvbG9jYWxlJyksCiAgICBwYXRoOiBnZXQoJ3BhZ2UvcGF0aCcpLAogICAgbW9kZTogZ2V0KCdlZGl0b3IvbW9kZScpLAogICAgYWN0aXZlTW9kYWw6IHN5bmMoJ2VkaXRvci9hY3RpdmVNb2RhbCcpLAogICAgY2hlY2tvdXREYXRlQWN0aXZlOiBzeW5jKCdlZGl0b3IvY2hlY2tvdXREYXRlQWN0aXZlJykKICB9LAogIG1ldGhvZHM6IHsKICAgIGluc2VydExpbms6IGZ1bmN0aW9uIGluc2VydExpbmsoKSB7CiAgICAgIHRoaXMuaW5zZXJ0TGlua0RpYWxvZyA9IHRydWU7CiAgICB9LAogICAgaW5zZXJ0TGlua0hhbmRsZXI6IGZ1bmN0aW9uIGluc2VydExpbmtIYW5kbGVyKF9yZWYpIHsKICAgICAgdmFyIGxvY2FsZSA9IF9yZWYubG9jYWxlLAogICAgICAgIHBhdGggPSBfcmVmLnBhdGg7CiAgICAgIGlmICghdGhpcy5lZGl0b3IpIHJldHVybjsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgdXJsID0gc2l0ZUxhbmdzLmxlbmd0aCA+IDAgPyAiLyIgKyBsb2NhbGUgKyAiLyIgKyBwYXRoIDogIi8iICsgcGF0aDsKCiAgICAgICAgLy8gU2V0IGxpbmsgb24gY3VycmVudCBzZWxlY3Rpb24KICAgICAgICB0aGlzLmVkaXRvci5jaGFpbigpLmZvY3VzKCkuc2V0TGluayh7CiAgICAgICAgICBocmVmOiB1cmwKICAgICAgICB9KS5ydW4oKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW5zZXJ0aW5nIGxpbms6JywgZXJyKTsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZVN0YXRzOiBmdW5jdGlvbiB1cGRhdGVTdGF0cygpIHsKICAgICAgaWYgKCF0aGlzLmVkaXRvcikgcmV0dXJuOwogICAgICB2YXIgdGV4dCA9IHRoaXMuZWRpdG9yLnN0YXRlLmRvYy50ZXh0Q29udGVudDsKICAgICAgdGhpcy5zdGF0cyA9IHsKICAgICAgICBjaGFyYWN0ZXJzOiB0ZXh0Lmxlbmd0aCwKICAgICAgICB3b3JkczogdGV4dC5zcGxpdCgvXHMrLykuZmlsdGVyKGZ1bmN0aW9uICh3KSB7CiAgICAgICAgICByZXR1cm4gdy5sZW5ndGggPiAwOwogICAgICAgIH0pLmxlbmd0aAogICAgICB9OwogICAgfSwKICAgIHRvZ2dsZVNsYXNoQ29tbWFuZDogZnVuY3Rpb24gdG9nZ2xlU2xhc2hDb21tYW5kKCkgewogICAgICBpZiAoIXRoaXMuZWRpdG9yKSByZXR1cm47CiAgICAgIHZhciB2aWV3ID0gdGhpcy5lZGl0b3IudmlldzsKICAgICAgdmFyIHNlbGVjdGlvbiA9IHZpZXcuc3RhdGUuc2VsZWN0aW9uOwogICAgICB2YXIgY29vcmRzID0gdmlldy5jb29yZHNBdFBvcyhzZWxlY3Rpb24uJGFuY2hvci5wb3MpOwogICAgICB0aGlzLnNsYXNoQ29tbWFuZFBvc2l0aW9uID0gewogICAgICAgIHg6IGNvb3Jkcy5sZWZ0LAogICAgICAgIHk6IGNvb3Jkcy5ib3R0b20KICAgICAgfTsKICAgICAgdGhpcy5zbGFzaENvbW1hbmRBY3RpdmUgPSB0cnVlOwogICAgICB0aGlzLnNsYXNoQ29tbWFuZFF1ZXJ5ID0gJyc7CiAgICB9LAogICAgb25TbGFzaENvbW1hbmRTZWxlY3Q6IGZ1bmN0aW9uIG9uU2xhc2hDb21tYW5kU2VsZWN0KGNvbW1hbmQpIHsKICAgICAgaWYgKCF0aGlzLmVkaXRvcikgcmV0dXJuOwogICAgICBjb21tYW5kLmFjdGlvbih0aGlzLmVkaXRvcik7CiAgICAgIHRoaXMuc2xhc2hDb21tYW5kQWN0aXZlID0gZmFsc2U7CiAgICB9LAogICAgdG9nZ2xlUGFnZVRyZWU6IGZ1bmN0aW9uIHRvZ2dsZVBhZ2VUcmVlKCkgewogICAgICB0aGlzLnNob3dQYWdlVHJlZSA9ICF0aGlzLnNob3dQYWdlVHJlZTsKICAgIH0sCiAgICB0b2dnbGVDb21tZW50czogZnVuY3Rpb24gdG9nZ2xlQ29tbWVudHMoKSB7CiAgICAgIHRoaXMuc2hvd0NvbW1lbnRzID0gIXRoaXMuc2hvd0NvbW1lbnRzOwogICAgfSwKICAgIHRvZ2dsZVZlcnNpb25IaXN0b3J5OiBmdW5jdGlvbiB0b2dnbGVWZXJzaW9uSGlzdG9yeSgpIHsKICAgICAgdGhpcy5zaG93VmVyc2lvbkhpc3RvcnkgPSAhdGhpcy5zaG93VmVyc2lvbkhpc3Rvcnk7CiAgICB9LAogICAgdG9nZ2xlU2VhcmNoOiBmdW5jdGlvbiB0b2dnbGVTZWFyY2goKSB7CiAgICAgIHRoaXMuc2hvd1NlYXJjaCA9ICF0aGlzLnNob3dTZWFyY2g7CiAgICB9LAogICAgYWRkQ29tbWVudDogZnVuY3Rpb24gYWRkQ29tbWVudChjb21tZW50KSB7CiAgICAgIHRoaXMuY29tbWVudHMucHVzaCh7CiAgICAgICAgaWQ6IERhdGUubm93KCksCiAgICAgICAgdGV4dDogY29tbWVudCwKICAgICAgICBhdXRob3I6IHRoaXMuJHN0b3JlLmdldCgndXNlci9uYW1lJyksCiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkKICAgICAgfSk7CiAgICB9LAogICAgbG9hZFZlcnNpb25IaXN0b3J5OiBmdW5jdGlvbiBsb2FkVmVyc2lvbkhpc3RvcnkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzdWx0OwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXBvbGxvLnF1ZXJ5KHsKICAgICAgICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICAgICAgICAgICJraW5kIjogIkRvY3VtZW50IiwKICAgICAgICAgICAgICAgICAgImRlZmluaXRpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJPcGVyYXRpb25EZWZpbml0aW9uIiwKICAgICAgICAgICAgICAgICAgICAib3BlcmF0aW9uIjogInF1ZXJ5IiwKICAgICAgICAgICAgICAgICAgICAidmFyaWFibGVEZWZpbml0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZURlZmluaXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgInZhcmlhYmxlIjogewogICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJpZCIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogewogICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOb25OdWxsVHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWVkVHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJJbnQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInBhZ2VzIgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25TZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiU2VsZWN0aW9uU2V0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJoaXN0b3J5IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJBcmd1bWVudCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJpZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlZhcmlhYmxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImlkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiU2VsZWN0aW9uU2V0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInRyYWlsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInZlcnNpb25JZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImF1dGhvck5hbWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJhY3Rpb25UeXBlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAidmVyc2lvbkRhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJ0b3RhbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAibG9jIjogewogICAgICAgICAgICAgICAgICAgICJzdGFydCI6IDAsCiAgICAgICAgICAgICAgICAgICAgImVuZCI6IDM0MiwKICAgICAgICAgICAgICAgICAgICAic291cmNlIjogewogICAgICAgICAgICAgICAgICAgICAgImJvZHkiOiAiXG4gICAgICAgICAgICBxdWVyeSAoJGlkOiBJbnQhKSB7XG4gICAgICAgICAgICAgIHBhZ2VzIHtcbiAgICAgICAgICAgICAgICBoaXN0b3J5KGlkOiAkaWQpIHtcbiAgICAgICAgICAgICAgICAgIHRyYWlsIHtcbiAgICAgICAgICAgICAgICAgICAgdmVyc2lvbklkXG4gICAgICAgICAgICAgICAgICAgIGF1dGhvck5hbWVcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uVHlwZVxuICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uRGF0ZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgdG90YWxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAiLAogICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAiR3JhcGhRTCByZXF1ZXN0IiwKICAgICAgICAgICAgICAgICAgICAgICJsb2NhdGlvbk9mZnNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImxpbmUiOiAxLAogICAgICAgICAgICAgICAgICAgICAgICAiY29sdW1uIjogMQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAgICAgICBpZDogX3RoaXMuJHN0b3JlLmdldCgncGFnZS9pZCcpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF90aGlzLnZlcnNpb25zID0gX2dldChyZXN1bHQsICdkYXRhLnBhZ2VzLmhpc3RvcnkudHJhaWwnLCBbXSk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIHZlcnNpb24gaGlzdG9yeTonLCBfY29udGV4dC50MCk7CiAgICAgICAgICAgICAgX3RoaXMuJHN0b3JlLmNvbW1pdCgnc2hvd05vdGlmaWNhdGlvbicsIHsKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gbG9hZCB2ZXJzaW9uIGhpc3Rvcnk6ICcgKyBfY29udGV4dC50MC5tZXNzYWdlLAogICAgICAgICAgICAgICAgc3R5bGU6ICdlcnJvcicKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9hZFZlcnNpb246IGZ1bmN0aW9uIGxvYWRWZXJzaW9uKHZlcnNpb24pIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3VsdCwgdmVyc2lvbkRhdGE7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmIChfdGhpczIuZWRpdG9yKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRhcG9sbG8ucXVlcnkoewogICAgICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRG9jdW1lbnQiLAogICAgICAgICAgICAgICAgICAiZGVmaW5pdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICJraW5kIjogIk9wZXJhdGlvbkRlZmluaXRpb24iLAogICAgICAgICAgICAgICAgICAgICJvcGVyYXRpb24iOiAicXVlcnkiLAogICAgICAgICAgICAgICAgICAgICJ2YXJpYWJsZURlZmluaXRpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlZhcmlhYmxlRGVmaW5pdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgICAidmFyaWFibGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlZhcmlhYmxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImlkIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5vbk51bGxUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZWRUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkludCIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGVEZWZpbml0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICJ2YXJpYWJsZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAidmVyc2lvbklkIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5vbk51bGxUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZWRUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkludCIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiU2VsZWN0aW9uU2V0IiwKICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAicGFnZXMiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJTZWxlY3Rpb25TZXQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInZlcnNpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkFyZ3VtZW50IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImlkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiaWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkFyZ3VtZW50IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInZlcnNpb25JZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlZhcmlhYmxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInZlcnNpb25JZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25TZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJjb250ZW50IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImNvbnRlbnRUeXBlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImNyZWF0ZWRBdCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJ2ZXJzaW9uRGF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJhdXRob3JOYW1lIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICJsb2MiOiB7CiAgICAgICAgICAgICAgICAgICAgInN0YXJ0IjogMCwKICAgICAgICAgICAgICAgICAgICAiZW5kIjogMzMyLAogICAgICAgICAgICAgICAgICAgICJzb3VyY2UiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiYm9keSI6ICJcbiAgICAgICAgICAgIHF1ZXJ5ICgkaWQ6IEludCEsICR2ZXJzaW9uSWQ6IEludCEpIHtcbiAgICAgICAgICAgICAgcGFnZXMge1xuICAgICAgICAgICAgICAgIHZlcnNpb24oaWQ6ICRpZCwgdmVyc2lvbklkOiAkdmVyc2lvbklkKSB7XG4gICAgICAgICAgICAgICAgICBjb250ZW50XG4gICAgICAgICAgICAgICAgICBjb250ZW50VHlwZVxuICAgICAgICAgICAgICAgICAgY3JlYXRlZEF0XG4gICAgICAgICAgICAgICAgICB2ZXJzaW9uRGF0ZVxuICAgICAgICAgICAgICAgICAgYXV0aG9yTmFtZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICIsCiAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJHcmFwaFFMIHJlcXVlc3QiLAogICAgICAgICAgICAgICAgICAgICAgImxvY2F0aW9uT2Zmc2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAibGluZSI6IDEsCiAgICAgICAgICAgICAgICAgICAgICAgICJjb2x1bW4iOiAxCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgICAgICAgIGlkOiBfdGhpczIuJHN0b3JlLmdldCgncGFnZS9pZCcpLAogICAgICAgICAgICAgICAgICB2ZXJzaW9uSWQ6IHZlcnNpb24udmVyc2lvbklkCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICB2ZXJzaW9uRGF0YSA9IF9nZXQocmVzdWx0LCAnZGF0YS5wYWdlcy52ZXJzaW9uJywge30pOwogICAgICAgICAgICAgIGlmICh2ZXJzaW9uRGF0YS5jb250ZW50KSB7CiAgICAgICAgICAgICAgICBfdGhpczIuY3VycmVudFZlcnNpb24gPSB2ZXJzaW9uRGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMi5lZGl0b3IuY29tbWFuZHMuc2V0Q29udGVudCh2ZXJzaW9uRGF0YS5jb250ZW50KTsKICAgICAgICAgICAgICAgIF90aGlzMi5zaG93VmVyc2lvbkhpc3RvcnkgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF90aGlzMi5jaGVja291dERhdGVBY3RpdmUgPSB2ZXJzaW9uRGF0YS52ZXJzaW9uRGF0ZTsKICAgICAgICAgICAgICAgIF90aGlzMi4kcm9vdC4kZW1pdCgncmVzZXRFZGl0b3JDb25mbGljdCcpOwogICAgICAgICAgICAgICAgX3RoaXMyLiRzdG9yZS5jb21taXQoJ3Nob3dOb3RpZmljYXRpb24nLCB7CiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICJMb2FkZWQgdmVyc2lvbiBmcm9tICIgKyB2ZXJzaW9uRGF0YS5hdXRob3JOYW1lLAogICAgICAgICAgICAgICAgICBzdHlsZTogJ3N1Y2Nlc3MnCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIHZlcnNpb246JywgX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgICBfdGhpczIuJHN0b3JlLmNvbW1pdCgnc2hvd05vdGlmaWNhdGlvbicsIHsKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gbG9hZCB2ZXJzaW9uOiAnICsgX2NvbnRleHQyLnQwLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICBzdHlsZTogJ2Vycm9yJwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzIsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzZWFyY2g6IGZ1bmN0aW9uIHNlYXJjaChxdWVyeSkgewogICAgICBpZiAoIXRoaXMuZWRpdG9yKSByZXR1cm47CiAgICAgIHRyeSB7CiAgICAgICAgdmFyIGNvbnRlbnQgPSB0aGlzLmVkaXRvci5nZXRUZXh0KCk7CiAgICAgICAgdmFyIHJlc3VsdHMgPSBbXTsKICAgICAgICB2YXIgcG9zID0gY29udGVudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocXVlcnkudG9Mb3dlckNhc2UoKSk7CiAgICAgICAgd2hpbGUgKHBvcyAhPT0gLTEpIHsKICAgICAgICAgIHJlc3VsdHMucHVzaCh7CiAgICAgICAgICAgIHRleHQ6IGNvbnRlbnQuc3Vic3RyKHBvcyAtIDIwLCA0MCksCiAgICAgICAgICAgIHBvc2l0aW9uOiBwb3MKICAgICAgICAgIH0pOwogICAgICAgICAgcG9zID0gY29udGVudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocXVlcnkudG9Mb3dlckNhc2UoKSwgcG9zICsgMSk7CiAgICAgICAgfQogICAgICAgIHRoaXMuc2VhcmNoUmVzdWx0cyA9IHJlc3VsdHM7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHBlcmZvcm1pbmcgc2VhcmNoOicsIGVycik7CiAgICAgIH0KICAgIH0sCiAgICBzZXR1cFBhc3RlSGFuZGxlcnM6IGZ1bmN0aW9uIHNldHVwUGFzdGVIYW5kbGVycygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICAgIGlmICghdGhpcy5lZGl0b3IpIHJldHVybjsKCiAgICAgIC8vIExpc3RlbiBmb3IgcGFzdGUgZXZlbnRzCiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdwYXN0ZScsIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGV2ZW50KSB7CiAgICAgICAgICB2YXIgaXRlbXMsIGh0bWwsIHRlbXBFbGVtZW50LCBnb29nbGVEb2NzSW1hZ2VzLCBfaXRlcmF0b3IsIF9zdGVwLCBpbWcsIGltZ1NyYywgYmxvYiwgYmFzZTY0RGF0YSwgYnl0ZUNoYXJhY3RlcnMsIGJ5dGVBcnJheXMsIGksIHNsaWNlLCBieXRlTnVtYmVycywgaiwgcmVzcG9uc2UsIGZpbGUsIGZvcm1EYXRhLCByZXN1bHQsIGFzc2V0LCBfdGVtcEVsZW1lbnQsIGNvbmZsdWVuY2VJbWFnZXMsIF9pdGVyYXRvcjIsIF9zdGVwMiwgX2ltZywgX2ltZ1NyYywgX3Jlc3BvbnNlLCBfYmxvYiwgX2ZpbGUsIF9mb3JtRGF0YSwgX3Jlc3VsdCwgX2Fzc2V0LCBfaXRlcmF0b3IzLCBfc3RlcDMsIGl0ZW0sIF9maWxlMiwgX2Zvcm1EYXRhMiwgX3Jlc3VsdDIsIF9hc3NldDI7CiAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaXRlbXMgPSAoZXZlbnQuY2xpcGJvYXJkRGF0YSB8fCBldmVudC5vcmlnaW5hbEV2ZW50LmNsaXBib2FyZERhdGEpLml0ZW1zOwogICAgICAgICAgICAgICAgaHRtbCA9IGV2ZW50LmNsaXBib2FyZERhdGEuZ2V0RGF0YSgndGV4dC9odG1sJyk7IC8vIFNwZWNpYWwgaGFuZGxpbmcgZm9yIEdvb2dsZSBEb2NzIGNvbnRlbnQKICAgICAgICAgICAgICAgIGlmICghKGh0bWwgJiYgaHRtbC5pbmNsdWRlcygnZG9jcy1pbnRlcm5hbC1ndWlkJykpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RldGVjdGVkIEdvb2dsZSBEb2NzIHBhc3RlJyk7CgogICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgdGVtcG9yYXJ5IGVsZW1lbnQgdG8gcGFyc2UgdGhlIEhUTUwKICAgICAgICAgICAgICAgIHRlbXBFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgICAgICAgICB0ZW1wRWxlbWVudC5pbm5lckhUTUwgPSBodG1sOwoKICAgICAgICAgICAgICAgIC8vIEZpbmQgYWxsIEdvb2dsZSBEb2NzIGltYWdlcwogICAgICAgICAgICAgICAgZ29vZ2xlRG9jc0ltYWdlcyA9IHRlbXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2ltZ1tzcmNePSJkYXRhOmltYWdlLyJdLCBpbWdbc3JjXj0iaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tLyJdJyk7CiAgICAgICAgICAgICAgICBpZiAoIShnb29nbGVEb2NzSW1hZ2VzLmxlbmd0aCA+IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXJMb29zZShnb29nbGVEb2NzSW1hZ2VzKTsKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBpZiAoKF9zdGVwID0gX2l0ZXJhdG9yKCkpLmRvbmUpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0NjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpbWcgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgICAgIGltZ1NyYyA9IGltZy5nZXRBdHRyaWJ1dGUoJ3NyYycpOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIGJsb2IgPSB2b2lkIDA7CiAgICAgICAgICAgICAgICBpZiAoIWltZ1NyYy5zdGFydHNXaXRoKCdkYXRhOmltYWdlLycpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy8gQ29udmVydCBiYXNlNjQgdG8gYmxvYgogICAgICAgICAgICAgICAgYmFzZTY0RGF0YSA9IGltZ1NyYy5zcGxpdCgnLCcpWzFdOwogICAgICAgICAgICAgICAgYnl0ZUNoYXJhY3RlcnMgPSBhdG9iKGJhc2U2NERhdGEpOwogICAgICAgICAgICAgICAgYnl0ZUFycmF5cyA9IFtdOwogICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGJ5dGVDaGFyYWN0ZXJzLmxlbmd0aDsgaSArPSA1MTIpIHsKICAgICAgICAgICAgICAgICAgc2xpY2UgPSBieXRlQ2hhcmFjdGVycy5zbGljZShpLCBpICsgNTEyKTsKICAgICAgICAgICAgICAgICAgYnl0ZU51bWJlcnMgPSBuZXcgQXJyYXkoc2xpY2UubGVuZ3RoKTsKICAgICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IHNsaWNlLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgYnl0ZU51bWJlcnNbal0gPSBzbGljZS5jaGFyQ29kZUF0KGopOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIGJ5dGVBcnJheXMucHVzaChuZXcgVWludDhBcnJheShieXRlTnVtYmVycykpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYmxvYiA9IG5ldyBCbG9iKGJ5dGVBcnJheXMsIHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ2ltYWdlL3BuZycKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzMDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKGltZ1NyYyk7CiAgICAgICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uub2spIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgiY29udGludWUiLCA0NCk7CiAgICAgICAgICAgICAgY2FzZSAyNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjk7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYmxvYigpOwogICAgICAgICAgICAgIGNhc2UgMjk6CiAgICAgICAgICAgICAgICBibG9iID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgY2FzZSAzMDoKICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBhIGZpbGUgb2JqZWN0CiAgICAgICAgICAgICAgICBmaWxlID0gbmV3IEZpbGUoW2Jsb2JdLCAiZ2RvY3MtaW1hZ2UtIiArIERhdGUubm93KCkgKyAiLiIgKyAoYmxvYi50eXBlLnNwbGl0KCcvJylbMV0gfHwgJ3BuZycpLCB7CiAgICAgICAgICAgICAgICAgIHR5cGU6IGJsb2IudHlwZQogICAgICAgICAgICAgICAgfSk7IC8vIFVwbG9hZCB0byBzZXJ2ZXIKICAgICAgICAgICAgICAgIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ21lZGlhVXBsb2FkJywgZmlsZSk7CgogICAgICAgICAgICAgICAgLy8gU2hvdyBsb2FkaW5nIGluZGljYXRvcgogICAgICAgICAgICAgICAgX3RoaXMzLiRzdG9yZS5jb21taXQoJ3Nob3dOb3RpZmljYXRpb24nLCB7CiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdVcGxvYWRpbmcgR29vZ2xlIERvY3MgaW1hZ2UuLi4nLAogICAgICAgICAgICAgICAgICBzdHlsZTogJ2luZm8nCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAvLyBVcGxvYWQgdGhlIGltYWdlCiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM2OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgICAgICAgICAgIG11dGF0aW9uOiB7CiAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRG9jdW1lbnQiLAogICAgICAgICAgICAgICAgICAgICJkZWZpbml0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJPcGVyYXRpb25EZWZpbml0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICJvcGVyYXRpb24iOiAibXV0YXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgInZhcmlhYmxlRGVmaW5pdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZURlZmluaXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgICAidmFyaWFibGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZm9sZGVySWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOb25OdWxsVHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lZFR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiSW50IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZURlZmluaXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgICAidmFyaWFibGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZmlsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5vbk51bGxUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWVkVHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJVcGxvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJTZWxlY3Rpb25TZXQiLAogICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiYXNzZXRzIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInVwbG9hZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiQXJndW1lbnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZm9sZGVySWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmb2xkZXJJZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJBcmd1bWVudCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZmlsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAicmVzcG9uc2VSZXN1bHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25TZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJzdWNjZWVkZWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZXJyb3JDb2RlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInNsdWciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAibWVzc2FnZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiYXNzZXQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25TZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJpZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlbmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJleHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAia2luZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlU2l6ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJ1cmwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiY3JlYXRlZEF0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgICAgICAibG9jIjogewogICAgICAgICAgICAgICAgICAgICAgInN0YXJ0IjogMCwKICAgICAgICAgICAgICAgICAgICAgICJlbmQiOiA4NDksCiAgICAgICAgICAgICAgICAgICAgICAic291cmNlIjogewogICAgICAgICAgICAgICAgICAgICAgICAiYm9keSI6ICJcbiAgICAgICAgICAgICAgICAgICAgbXV0YXRpb24gKCRmb2xkZXJJZDogSW50ISwgJGZpbGU6IFVwbG9hZCEpIHtcbiAgICAgICAgICAgICAgICAgICAgICBhc3NldHMge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBsb2FkKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xkZXJJZDogJGZvbGRlcklkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6ICRmaWxlXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VSZXN1bHQge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2NlZWRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yQ29kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsdWdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXNzZXQge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZVNpemVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVkQXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgIiwKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAiR3JhcGhRTCByZXF1ZXN0IiwKICAgICAgICAgICAgICAgICAgICAgICAgImxvY2F0aW9uT2Zmc2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJsaW5lIjogMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAiY29sdW1uIjogMQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBmb2xkZXJJZDogMCwKICAgICAgICAgICAgICAgICAgICAvLyBSb290IGZvbGRlcgogICAgICAgICAgICAgICAgICAgIGZpbGU6IGZvcm1EYXRhLmdldCgnbWVkaWFVcGxvYWQnKQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBjb250ZXh0OiB7CiAgICAgICAgICAgICAgICAgICAgaGFzVXBsb2FkOiB0cnVlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGNhc2UgMzY6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIGFzc2V0ID0gX2dldChyZXN1bHQsICdkYXRhLmFzc2V0cy51cGxvYWQuYXNzZXQnLCBudWxsKTsKICAgICAgICAgICAgICAgIGlmIChhc3NldCkgewogICAgICAgICAgICAgICAgICAvLyBVcGRhdGUgaW1hZ2Ugc3JjIGluIHRoZSB0ZW1wb3JhcnkgZWxlbWVudAogICAgICAgICAgICAgICAgICBpbWcuc2V0QXR0cmlidXRlKCdzcmMnLCBhc3NldC51cmwpOwogICAgICAgICAgICAgICAgICBpbWcucmVtb3ZlQXR0cmlidXRlKCd3aWR0aCcpOwogICAgICAgICAgICAgICAgICBpbWcucmVtb3ZlQXR0cmlidXRlKCdoZWlnaHQnKTsKICAgICAgICAgICAgICAgICAgX3RoaXMzLiRzdG9yZS5jb21taXQoJ3Nob3dOb3RpZmljYXRpb24nLCB7CiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0dvb2dsZSBEb2NzIGltYWdlIHVwbG9hZGVkIHN1Y2Nlc3NmdWxseScsCiAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdzdWNjZXNzJwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDQ7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlIDQxOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA0MTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgxMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB1cGxvYWRpbmcgR29vZ2xlIERvY3MgaW1hZ2U6JywgX2NvbnRleHQzLnQwKTsKICAgICAgICAgICAgICBjYXNlIDQ0OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgY2FzZSA0NjoKICAgICAgICAgICAgICAgIC8vIE5vdyBpbnNlcnQgdGhlIG1vZGlmaWVkIEhUTUwgd2l0aCBmaXhlZCBpbWFnZXMKICAgICAgICAgICAgICAgIF90aGlzMy5lZGl0b3IuY29tbWFuZHMuaW5zZXJ0Q29udGVudCh0ZW1wRWxlbWVudC5pbm5lckhUTUwpOwoKICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgZGVmYXVsdCBwYXN0ZSBiZWhhdmlvcgogICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICAgIGNhc2UgNTA6CiAgICAgICAgICAgICAgICBpZiAoIShodG1sICYmIGh0bWwuaW5jbHVkZXMoJ2NvbmZsdWVuY2UnKSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5MDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRGV0ZWN0ZWQgQ29uZmx1ZW5jZSBwYXN0ZScpOwoKICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBhIHRlbXBvcmFyeSBlbGVtZW50IHRvIHBhcnNlIHRoZSBIVE1MCiAgICAgICAgICAgICAgICBfdGVtcEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICAgICAgICAgIF90ZW1wRWxlbWVudC5pbm5lckhUTUwgPSBodG1sOwoKICAgICAgICAgICAgICAgIC8vIEZpbmQgYWxsIENvbmZsdWVuY2UgaW1hZ2VzCiAgICAgICAgICAgICAgICBjb25mbHVlbmNlSW1hZ2VzID0gX3RlbXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2ltZ1tkYXRhLWltYWdlLXNyY10sIGltZ1tkYXRhLW1hY3JvLW5hbWU9ImltYWdlIl0nKTsKICAgICAgICAgICAgICAgIGlmICghKGNvbmZsdWVuY2VJbWFnZXMubGVuZ3RoID4gMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5MDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXJMb29zZShjb25mbHVlbmNlSW1hZ2VzKTsKICAgICAgICAgICAgICBjYXNlIDU3OgogICAgICAgICAgICAgICAgaWYgKChfc3RlcDIgPSBfaXRlcmF0b3IyKCkpLmRvbmUpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA4NjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfaW1nID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgICAgICAgLy8gR2V0IHRoZSBpbWFnZSBVUkwgLSBlaXRoZXIgZnJvbSBkYXRhLWltYWdlLXNyYyBvciBzcmMKICAgICAgICAgICAgICAgIF9pbWdTcmMgPSBfaW1nLmdldEF0dHJpYnV0ZSgnZGF0YS1pbWFnZS1zcmMnKSB8fCBfaW1nLmdldEF0dHJpYnV0ZSgnc3JjJyk7CiAgICAgICAgICAgICAgICBpZiAoIV9pbWdTcmMpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA4NDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDYxOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA2NDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaChfaW1nU3JjKTsKICAgICAgICAgICAgICBjYXNlIDY0OgogICAgICAgICAgICAgICAgX3Jlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBpZiAoX3Jlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNjc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoImNvbnRpbnVlIiwgODQpOwogICAgICAgICAgICAgIGNhc2UgNjc6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY5OwogICAgICAgICAgICAgICAgcmV0dXJuIF9yZXNwb25zZS5ibG9iKCk7CiAgICAgICAgICAgICAgY2FzZSA2OToKICAgICAgICAgICAgICAgIF9ibG9iID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgYSBmaWxlIG9iamVjdAogICAgICAgICAgICAgICAgX2ZpbGUgPSBuZXcgRmlsZShbX2Jsb2JdLCAiY29uZmx1ZW5jZS1pbWFnZS0iICsgRGF0ZS5ub3coKSArICIuIiArIChfYmxvYi50eXBlLnNwbGl0KCcvJylbMV0gfHwgJ3BuZycpLCB7CiAgICAgICAgICAgICAgICAgIHR5cGU6IF9ibG9iLnR5cGUKICAgICAgICAgICAgICAgIH0pOyAvLyBVcGxvYWQgdG8gc2VydmVyCiAgICAgICAgICAgICAgICBfZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgIF9mb3JtRGF0YS5hcHBlbmQoJ21lZGlhVXBsb2FkJywgX2ZpbGUpOwoKICAgICAgICAgICAgICAgIC8vIFNob3cgbG9hZGluZyBpbmRpY2F0b3IKICAgICAgICAgICAgICAgIF90aGlzMy4kc3RvcmUuY29tbWl0KCdzaG93Tm90aWZpY2F0aW9uJywgewogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnVXBsb2FkaW5nIENvbmZsdWVuY2UgaW1hZ2UuLi4nLAogICAgICAgICAgICAgICAgICBzdHlsZTogJ2luZm8nCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAvLyBVcGxvYWQgdGhlIGltYWdlCiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc2OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgICAgICAgICAgIG11dGF0aW9uOiB7CiAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRG9jdW1lbnQiLAogICAgICAgICAgICAgICAgICAgICJkZWZpbml0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJPcGVyYXRpb25EZWZpbml0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICJvcGVyYXRpb24iOiAibXV0YXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgInZhcmlhYmxlRGVmaW5pdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZURlZmluaXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgICAidmFyaWFibGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZm9sZGVySWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOb25OdWxsVHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lZFR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiSW50IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZURlZmluaXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgICAidmFyaWFibGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZmlsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5vbk51bGxUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWVkVHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJVcGxvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJTZWxlY3Rpb25TZXQiLAogICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiYXNzZXRzIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInVwbG9hZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiQXJndW1lbnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZm9sZGVySWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmb2xkZXJJZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJBcmd1bWVudCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZmlsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAicmVzcG9uc2VSZXN1bHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25TZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJzdWNjZWVkZWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZXJyb3JDb2RlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInNsdWciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAibWVzc2FnZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiYXNzZXQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25TZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJpZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlbmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJleHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAia2luZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlU2l6ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJ1cmwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiY3JlYXRlZEF0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgICAgICAibG9jIjogewogICAgICAgICAgICAgICAgICAgICAgInN0YXJ0IjogMCwKICAgICAgICAgICAgICAgICAgICAgICJlbmQiOiA4NDksCiAgICAgICAgICAgICAgICAgICAgICAic291cmNlIjogewogICAgICAgICAgICAgICAgICAgICAgICAiYm9keSI6ICJcbiAgICAgICAgICAgICAgICAgICAgbXV0YXRpb24gKCRmb2xkZXJJZDogSW50ISwgJGZpbGU6IFVwbG9hZCEpIHtcbiAgICAgICAgICAgICAgICAgICAgICBhc3NldHMge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBsb2FkKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xkZXJJZDogJGZvbGRlcklkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6ICRmaWxlXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VSZXN1bHQge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2NlZWRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yQ29kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsdWdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXNzZXQge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZVNpemVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVkQXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgIiwKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAiR3JhcGhRTCByZXF1ZXN0IiwKICAgICAgICAgICAgICAgICAgICAgICAgImxvY2F0aW9uT2Zmc2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJsaW5lIjogMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAiY29sdW1uIjogMQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBmb2xkZXJJZDogMCwKICAgICAgICAgICAgICAgICAgICAvLyBSb290IGZvbGRlcgogICAgICAgICAgICAgICAgICAgIGZpbGU6IF9mb3JtRGF0YS5nZXQoJ21lZGlhVXBsb2FkJykKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgY29udGV4dDogewogICAgICAgICAgICAgICAgICAgIGhhc1VwbG9hZDogdHJ1ZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBjYXNlIDc2OgogICAgICAgICAgICAgICAgX3Jlc3VsdCA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgX2Fzc2V0ID0gX2dldChfcmVzdWx0LCAnZGF0YS5hc3NldHMudXBsb2FkLmFzc2V0JywgbnVsbCk7CiAgICAgICAgICAgICAgICBpZiAoX2Fzc2V0KSB7CiAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBpbWFnZSBzcmMgaW4gdGhlIHRlbXBvcmFyeSBlbGVtZW50CiAgICAgICAgICAgICAgICAgIF9pbWcuc2V0QXR0cmlidXRlKCdzcmMnLCBfYXNzZXQudXJsKTsKICAgICAgICAgICAgICAgICAgX2ltZy5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtaW1hZ2Utc3JjJyk7CiAgICAgICAgICAgICAgICAgIF9pbWcucmVtb3ZlQXR0cmlidXRlKCdkYXRhLW1hY3JvLW5hbWUnKTsKICAgICAgICAgICAgICAgICAgX3RoaXMzLiRzdG9yZS5jb21taXQoJ3Nob3dOb3RpZmljYXRpb24nLCB7CiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0NvbmZsdWVuY2UgaW1hZ2UgdXBsb2FkZWQgc3VjY2Vzc2Z1bGx5JywKICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ3N1Y2Nlc3MnCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA4NDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIGNhc2UgODE6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDgxOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQxID0gX2NvbnRleHQzWyJjYXRjaCJdKDYxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHVwbG9hZGluZyBDb25mbHVlbmNlIGltYWdlOicsIF9jb250ZXh0My50MSk7CiAgICAgICAgICAgICAgY2FzZSA4NDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNTc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlIDg2OgogICAgICAgICAgICAgICAgLy8gTm93IGluc2VydCB0aGUgbW9kaWZpZWQgSFRNTCB3aXRoIGZpeGVkIGltYWdlcwogICAgICAgICAgICAgICAgX3RoaXMzLmVkaXRvci5jb21tYW5kcy5pbnNlcnRDb250ZW50KF90ZW1wRWxlbWVudC5pbm5lckhUTUwpOwoKICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgZGVmYXVsdCBwYXN0ZSBiZWhhdmlvcgogICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICAgIGNhc2UgOTA6CiAgICAgICAgICAgICAgICBfaXRlcmF0b3IzID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXJMb29zZShpdGVtcyk7CiAgICAgICAgICAgICAgY2FzZSA5MToKICAgICAgICAgICAgICAgIGlmICgoX3N0ZXAzID0gX2l0ZXJhdG9yMygpKS5kb25lKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTE0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGl0ZW0gPSBfc3RlcDMudmFsdWU7CiAgICAgICAgICAgICAgICBpZiAoIShpdGVtLnR5cGUuaW5kZXhPZignaW1hZ2UnKSA9PT0gMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMTI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX2ZpbGUyID0gaXRlbS5nZXRBc0ZpbGUoKTsKICAgICAgICAgICAgICAgIGlmIChfZmlsZTIpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5NzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgiY29udGludWUiLCAxMTIpOwogICAgICAgICAgICAgIGNhc2UgOTc6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDk3OwogICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgZm9ybSBkYXRhIG9iamVjdAogICAgICAgICAgICAgICAgX2Zvcm1EYXRhMiA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICAgICAgX2Zvcm1EYXRhMi5hcHBlbmQoJ21lZGlhVXBsb2FkJywgX2ZpbGUyKTsKCiAgICAgICAgICAgICAgICAvLyBTaG93IGxvYWRpbmcgaW5kaWNhdG9yCiAgICAgICAgICAgICAgICBfdGhpczMuJHN0b3JlLmNvbW1pdCgnc2hvd05vdGlmaWNhdGlvbicsIHsKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1VwbG9hZGluZyBwYXN0ZWQgaW1hZ2UuLi4nLAogICAgICAgICAgICAgICAgICBzdHlsZTogJ2luZm8nCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAvLyBVcGxvYWQgdGhlIGltYWdlCiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEwMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgICBtdXRhdGlvbjogewogICAgICAgICAgICAgICAgICAgICJraW5kIjogIkRvY3VtZW50IiwKICAgICAgICAgICAgICAgICAgICAiZGVmaW5pdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiT3BlcmF0aW9uRGVmaW5pdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgICAib3BlcmF0aW9uIjogIm11dGF0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICJ2YXJpYWJsZURlZmluaXRpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGVEZWZpbml0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgInZhcmlhYmxlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlZhcmlhYmxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImZvbGRlcklkIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTm9uTnVsbFR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZWRUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkludCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGVEZWZpbml0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgInZhcmlhYmxlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlZhcmlhYmxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImZpbGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOb25OdWxsVHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lZFR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiVXBsb2FkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiU2VsZWN0aW9uU2V0IiwKICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImFzc2V0cyIKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25TZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJTZWxlY3Rpb25TZXQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJ1cGxvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkFyZ3VtZW50IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImZvbGRlcklkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZm9sZGVySWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiQXJndW1lbnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZmlsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlZhcmlhYmxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImZpbGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJTZWxlY3Rpb25TZXQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInJlc3BvbnNlUmVzdWx0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJTZWxlY3Rpb25TZXQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAic3VjY2VlZGVkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImVycm9yQ29kZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJzbHVnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIm1lc3NhZ2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImFzc2V0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJTZWxlY3Rpb25TZXQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiaWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZmlsZW5hbWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZXh0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImtpbmQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZmlsZVNpemUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAidXJsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImNyZWF0ZWRBdCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgImxvYyI6IHsKICAgICAgICAgICAgICAgICAgICAgICJzdGFydCI6IDAsCiAgICAgICAgICAgICAgICAgICAgICAiZW5kIjogODQ5LAogICAgICAgICAgICAgICAgICAgICAgInNvdXJjZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImJvZHkiOiAiXG4gICAgICAgICAgICAgICAgICAgIG11dGF0aW9uICgkZm9sZGVySWQ6IEludCEsICRmaWxlOiBVcGxvYWQhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgYXNzZXRzIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwbG9hZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sZGVySWQ6ICRmb2xkZXJJZFxuICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlOiAkZmlsZVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlUmVzdWx0IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZWVkZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvckNvZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbHVnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFzc2V0IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2luZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVTaXplXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlZEF0XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICIsCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogIkdyYXBoUUwgcmVxdWVzdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJsb2NhdGlvbk9mZnNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAibGluZSI6IDEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImNvbHVtbiI6IDEKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgICAgICAgICAgZm9sZGVySWQ6IDAsCiAgICAgICAgICAgICAgICAgICAgLy8gUm9vdCBmb2xkZXIKICAgICAgICAgICAgICAgICAgICBmaWxlOiBfZm9ybURhdGEyLmdldCgnbWVkaWFVcGxvYWQnKQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBjb250ZXh0OiB7CiAgICAgICAgICAgICAgICAgICAgaGFzVXBsb2FkOiB0cnVlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGNhc2UgMTAzOgogICAgICAgICAgICAgICAgX3Jlc3VsdDIgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF9hc3NldDIgPSBfZ2V0KF9yZXN1bHQyLCAnZGF0YS5hc3NldHMudXBsb2FkLmFzc2V0JywgbnVsbCk7CiAgICAgICAgICAgICAgICBpZiAoX2Fzc2V0MikgewogICAgICAgICAgICAgICAgICAvLyBJbnNlcnQgdGhlIGltYWdlIGF0IGN1cnNvciBwb3NpdGlvbgogICAgICAgICAgICAgICAgICBfdGhpczMuZWRpdG9yLmNoYWluKCkuZm9jdXMoKS5zZXRJbWFnZSh7CiAgICAgICAgICAgICAgICAgICAgc3JjOiBfYXNzZXQyLnVybAogICAgICAgICAgICAgICAgICB9KS5ydW4oKTsKCiAgICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgZGVmYXVsdCBwYXN0ZSBiZWhhdmlvciBmb3IgdGhpcyBpdGVtCiAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICAgICAgICBfdGhpczMuJHN0b3JlLmNvbW1pdCgnc2hvd05vdGlmaWNhdGlvbicsIHsKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnSW1hZ2UgdXBsb2FkZWQgc3VjY2Vzc2Z1bGx5JywKICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ3N1Y2Nlc3MnCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMTI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlIDEwODoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQyID0gX2NvbnRleHQzWyJjYXRjaCJdKDk3KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHVwbG9hZGluZyBwYXN0ZWQgaW1hZ2U6JywgX2NvbnRleHQzLnQyKTsKICAgICAgICAgICAgICAgIF90aGlzMy4kc3RvcmUuY29tbWl0KCdzaG93Tm90aWZpY2F0aW9uJywgewogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIHVwbG9hZCBwYXN0ZWQgaW1hZ2U6ICcgKyBfY29udGV4dDMudDIubWVzc2FnZSwKICAgICAgICAgICAgICAgICAgc3R5bGU6ICdlcnJvcicKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGNhc2UgMTEyOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5MTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIGNhc2UgMTE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMTIsIDQxXSwgWzYxLCA4MV0sIFs5NywgMTA4XV0pOwogICAgICAgIH0pKTsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9OwogICAgICB9KCkpOwogICAgfSwKICAgIHNhdmVDb250ZW50OiBmdW5jdGlvbiBzYXZlQ29udGVudChvcHRzKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBwcm9jZXNzZWRDb250ZW50OwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBpZiAob3B0cyA9PT0gdm9pZCAwKSB7CiAgICAgICAgICAgICAgICBvcHRzID0ge307CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMTsKICAgICAgICAgICAgICBwcm9jZXNzZWRDb250ZW50ID0gX3RoaXM0LnByZXBhcmVDb250ZW50Rm9yU2F2ZSgpOwogICAgICAgICAgICAgIF90aGlzNC4kc3RvcmUuc2V0KCdlZGl0b3IvY29udGVudCcsIHByb2Nlc3NlZENvbnRlbnQpOwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM0LnNhdmUob3B0cyk7CiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDEyOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA4OwogICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzYXZpbmcgY29udGVudDonLCBfY29udGV4dDQudDApOwogICAgICAgICAgICAgIF90aGlzNC4kc3RvcmUuY29tbWl0KCdzaG93Tm90aWZpY2F0aW9uJywgewogICAgICAgICAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBzYXZlIGNvbnRlbnQ6ICcgKyBfY29udGV4dDQudDAubWVzc2FnZSwKICAgICAgICAgICAgICAgIHN0eWxlOiAnZXJyb3InCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMSwgOF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZm9yY2VQYWdlU2F2ZTogZnVuY3Rpb24gZm9yY2VQYWdlU2F2ZSgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5zYXZlQ29udGVudCh7CiAgICAgICAgICAgICAgICBvdmVyd3JpdGU6IHRydWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gNTsKICAgICAgICAgICAgICBfY29udGV4dDUudDAgPSBfY29udGV4dDVbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZm9yY2luZyBwYWdlIHNhdmU6JywgX2NvbnRleHQ1LnQwKTsKICAgICAgICAgICAgICBfdGhpczUuJHN0b3JlLmNvbW1pdCgnc2hvd05vdGlmaWNhdGlvbicsIHsKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gc2F2ZSBwYWdlOiAnICsgX2NvbnRleHQ1LnQwLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICBzdHlsZTogJ2Vycm9yJwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUsIG51bGwsIFtbMCwgNV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcmVsb2FkQ29udGVudDogZnVuY3Rpb24gcmVsb2FkQ29udGVudCgpIHsKICAgICAgaWYgKCF0aGlzLmVkaXRvcikgcmV0dXJuOwogICAgICB2YXIgY29udGVudCA9IHRoaXMuJHN0b3JlLmdldCgnZWRpdG9yL2NvbnRlbnQnKTsKICAgICAgdmFyIHByb2Nlc3NlZENvbnRlbnQgPSB0aGlzLnByb2Nlc3NJbWFnZXNBZnRlckxvYWQoY29udGVudCk7CiAgICAgIHRoaXMuZWRpdG9yLmNvbW1hbmRzLnNldENvbnRlbnQocHJvY2Vzc2VkQ29udGVudCk7CiAgICAgIHRoaXMudXBkYXRlU3RhdHMoKTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzaG93Tm90aWZpY2F0aW9uJywgewogICAgICAgIG1lc3NhZ2U6ICdDb250ZW50IGhhcyBiZWVuIHVwZGF0ZWQgZnJvbSBzZXJ2ZXIgdmVyc2lvbicsCiAgICAgICAgc3R5bGU6ICdpbmZvJwogICAgICB9KTsKICAgIH0sCiAgICBwcmVwYXJlQ29udGVudEZvclNhdmU6IGZ1bmN0aW9uIHByZXBhcmVDb250ZW50Rm9yU2F2ZSgpIHsKICAgICAgaWYgKCF0aGlzLmVkaXRvcikgcmV0dXJuIHRoaXMuJHN0b3JlLmdldCgnZWRpdG9yL2NvbnRlbnQnKTsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgY29udGVudCA9IHRoaXMuZWRpdG9yLmdldEhUTUwoKTsKCiAgICAgICAgLy8gQ3JlYXRlIGEgdGVtcG9yYXJ5IERPTSBlbGVtZW50IHRvIHdvcmsgd2l0aCB0aGUgY29udGVudAogICAgICAgIHZhciB0ZW1wRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICAgIHRlbXBFbGVtZW50LmlubmVySFRNTCA9IGNvbnRlbnQ7CgogICAgICAgIC8vIFByb2Nlc3MgYWxsIGltYWdlcwogICAgICAgIHZhciBpbWFnZXMgPSB0ZW1wRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbWcnKTsKICAgICAgICBpbWFnZXMuZm9yRWFjaChmdW5jdGlvbiAoaW1nKSB7CiAgICAgICAgICB2YXIgc3JjID0gaW1nLmdldEF0dHJpYnV0ZSgnc3JjJyk7CgogICAgICAgICAgLy8gQ29udmVydCBiYXNlNjQgaW1hZ2VzIHRvIGFzc2V0cyBpZiBuZWNlc3NhcnkKICAgICAgICAgIGlmIChzcmMgJiYgc3JjLnN0YXJ0c1dpdGgoJ2RhdGE6aW1hZ2UvJykpIHsKICAgICAgICAgICAgLy8gV2UnbGwga2VlcCB0aG9zZSBhcyBpcyBmb3Igbm93LCBidXQgaW4gYSBwcm9kdWN0aW9uIGVudmlyb25tZW50CiAgICAgICAgICAgIC8vIHlvdSB3b3VsZCB1cGxvYWQgdGhlbSBhcyBhc3NldHMgaGVyZQogICAgICAgICAgICBjb25zb2xlLmxvZygnRm91bmQgYmFzZTY0IGltYWdlIGluIGNvbnRlbnQgb24gc2F2ZScpOwogICAgICAgICAgfQoKICAgICAgICAgIC8vIEVuc3VyZSBpbWFnZSBoYXMgcHJvcGVyIGF0dHJpYnV0ZXMKICAgICAgICAgIGltZy5zZXRBdHRyaWJ1dGUoJ2xvYWRpbmcnLCAnbGF6eScpOwogICAgICAgICAgaW1nLnNldEF0dHJpYnV0ZSgnZGF0YS13aWtpanMtZWxlbWVudCcsICdpbWFnZScpOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiB0ZW1wRWxlbWVudC5pbm5lckhUTUw7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHByZXBhcmluZyBjb250ZW50IGZvciBzYXZlOicsIGVycik7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldCgnZWRpdG9yL2NvbnRlbnQnKTsKICAgICAgfQogICAgfSwKICAgIHByb2Nlc3NJbWFnZXNBZnRlckxvYWQ6IGZ1bmN0aW9uIHByb2Nlc3NJbWFnZXNBZnRlckxvYWQoY29udGVudCkgewogICAgICBpZiAoIWNvbnRlbnQpIHJldHVybiBjb250ZW50OwogICAgICB0cnkgewogICAgICAgIC8vIENyZWF0ZSBhIHRlbXBvcmFyeSBET00gZWxlbWVudAogICAgICAgIHZhciB0ZW1wRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICAgIHRlbXBFbGVtZW50LmlubmVySFRNTCA9IGNvbnRlbnQ7CgogICAgICAgIC8vIEZpeCBpbWFnZSBwYXRocyBpZiBuZWVkZWQKICAgICAgICB2YXIgaW1hZ2VzID0gdGVtcEVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW1nJyk7CiAgICAgICAgaW1hZ2VzLmZvckVhY2goZnVuY3Rpb24gKGltZykgewogICAgICAgICAgdmFyIHNyYyA9IGltZy5nZXRBdHRyaWJ1dGUoJ3NyYycpOwoKICAgICAgICAgIC8vIEVuc3VyZSByZWxhdGl2ZSBVUkxzIHN0YXJ0IHdpdGggYSBzbGFzaAogICAgICAgICAgaWYgKHNyYyAmJiAhc3JjLnN0YXJ0c1dpdGgoJ2RhdGE6JykgJiYgIXNyYy5zdGFydHNXaXRoKCdodHRwJykgJiYgIXNyYy5zdGFydHNXaXRoKCcvJykpIHsKICAgICAgICAgICAgaW1nLnNldEF0dHJpYnV0ZSgnc3JjJywgJy8nICsgc3JjKTsKICAgICAgICAgIH0KCiAgICAgICAgICAvLyBBZGQgbG9hZGluZyBsYXp5IGF0dHJpYnV0ZQogICAgICAgICAgaW1nLnNldEF0dHJpYnV0ZSgnbG9hZGluZycsICdsYXp5Jyk7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIHRlbXBFbGVtZW50LmlubmVySFRNTDsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcHJvY2Vzc2luZyBpbWFnZXMgYWZ0ZXIgbG9hZDonLCBlcnIpOwogICAgICAgIHJldHVybiBjb250ZW50OwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzNiA9IHRoaXM7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU3KCkgewogICAgICB2YXIgZWRpdG9yRWxlbWVudCwgdG9vbGJhckNvbnRhaW5lcjsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU3JChfY29udGV4dDcpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDcucHJldiA9IF9jb250ZXh0Ny5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF90aGlzNi4kc3RvcmUuc2V0KCdlZGl0b3IvZWRpdG9yS2V5JywgJ2JvZGUnKTsKICAgICAgICAgICAgaWYgKF90aGlzNi5tb2RlID09PSAnY3JlYXRlJyAmJiAhX3RoaXM2LiRzdG9yZS5nZXQoJ2VkaXRvci9jb250ZW50JykpIHsKICAgICAgICAgICAgICBfdGhpczYuJHN0b3JlLnNldCgnZWRpdG9yL2NvbnRlbnQnLCAnPGgxPkhlYWRlcjwvaDE+PHA+WW91ciBjb250ZW50IGhlcmU8L3A+Jyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIFNldHVwIHZlcnNpb24gY29udHJvbCBsaXN0ZW5lcnMKICAgICAgICAgICAgX3RoaXM2LiRyb290LiRvbignZm9yY2VTYXZlJywgX3RoaXM2LmZvcmNlUGFnZVNhdmUpOwogICAgICAgICAgICBfdGhpczYuJHJvb3QuJG9uKCdvdmVyd3JpdGVFZGl0b3JDb250ZW50JywgX3RoaXM2LnJlbG9hZENvbnRlbnQpOwogICAgICAgICAgICBfY29udGV4dDcucHJldiA9IDQ7CiAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gNzsKICAgICAgICAgICAgcmV0dXJuIF90aGlzNi4kbmV4dFRpY2soKTsKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgZWRpdG9yRWxlbWVudCA9IF90aGlzNi4kcmVmcy5lZGl0b3I7CiAgICAgICAgICAgIHRvb2xiYXJDb250YWluZXIgPSBfdGhpczYuJHJlZnMudG9vbGJhckNvbnRhaW5lcjsKICAgICAgICAgICAgaWYgKCEoIWVkaXRvckVsZW1lbnQgfHwgIXRvb2xiYXJDb250YWluZXIpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlcXVpcmVkIGVkaXRvciBlbGVtZW50cyBub3QgZm91bmQnKTsKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIC8vIEluaXRpYWxpemUgVGlwdGFwIGVkaXRvciB3aXRoIGVzc2VudGlhbCBmZWF0dXJlcyBmaXJzdAogICAgICAgICAgICBfdGhpczYuZWRpdG9yID0gbmV3IEVkaXRvcih7CiAgICAgICAgICAgICAgZWxlbWVudDogZWRpdG9yRWxlbWVudCwKICAgICAgICAgICAgICBleHRlbnNpb25zOiBbU3RhcnRlcktpdCwgUGxhY2Vob2xkZXIuY29uZmlndXJlKHsKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAnV3JpdGUgc29tZXRoaW5nLi4uJwogICAgICAgICAgICAgIH0pLCBJbWFnZS5jb25maWd1cmUoewogICAgICAgICAgICAgICAgYWxsb3dCYXNlNjQ6IHRydWUsCiAgICAgICAgICAgICAgICBIVE1MQXR0cmlidXRlczogewogICAgICAgICAgICAgICAgICBjbGFzczogJ2VkaXRvci1pbWFnZScKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB1cGxvYWRJbWFnZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICB2YXIgX3VwbG9hZEltYWdlID0gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU2KGZpbGUpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgZm9ybURhdGEsIHJlc3VsdCwgYXNzZXQ7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDcmVhdGUgYSBmb3JtIGRhdGEgb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ21lZGlhVXBsb2FkJywgZmlsZSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFVwbG9hZCB0aGUgaW1hZ2UKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNi4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdXRhdGlvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJEb2N1bWVudCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkZWZpbml0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiT3BlcmF0aW9uRGVmaW5pdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm9wZXJhdGlvbiI6ICJtdXRhdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhcmlhYmxlRGVmaW5pdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGVEZWZpbml0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YXJpYWJsZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZm9sZGVySWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTm9uTnVsbFR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lZFR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiSW50IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZURlZmluaXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhcmlhYmxlIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5vbk51bGxUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZWRUeXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIlVwbG9hZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiU2VsZWN0aW9uU2V0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiYXNzZXRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25TZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiU2VsZWN0aW9uU2V0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJ1cGxvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkFyZ3VtZW50IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImZvbGRlcklkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiVmFyaWFibGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiZm9sZGVySWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkFyZ3VtZW50IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImZpbGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJWYXJpYWJsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiU2VsZWN0aW9uU2V0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvbnMiOiBbewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInJlc3BvbnNlUmVzdWx0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNlbGVjdGlvblNldCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlNlbGVjdGlvblNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9ucyI6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInN1Y2NlZWRlZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImVycm9yQ29kZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInNsdWciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJtZXNzYWdlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXJlY3RpdmVzIjogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiYXNzZXQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzIjogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2VsZWN0aW9uU2V0IjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiU2VsZWN0aW9uU2V0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZWxlY3Rpb25zIjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiRmllbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJOYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiaWQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlbmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImV4dCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImtpbmQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudHMiOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpcmVjdGl2ZXMiOiBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2luZCI6ICJGaWVsZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIk5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJmaWxlU2l6ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInVybCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIkZpZWxkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImtpbmQiOiAiTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImNyZWF0ZWRBdCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50cyI6IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlyZWN0aXZlcyI6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJsb2MiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInN0YXJ0IjogMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZW5kIjogODQ5LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzb3VyY2UiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYm9keSI6ICJcbiAgICAgICAgICAgICAgICAgICAgbXV0YXRpb24gKCRmb2xkZXJJZDogSW50ISwgJGZpbGU6IFVwbG9hZCEpIHtcbiAgICAgICAgICAgICAgICAgICAgICBhc3NldHMge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBsb2FkKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xkZXJJZDogJGZvbGRlcklkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6ICRmaWxlXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VSZXN1bHQge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2NlZWRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yQ29kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsdWdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXNzZXQge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZVNpemVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVkQXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogIkdyYXBoUUwgcmVxdWVzdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibG9jYXRpb25PZmZzZXQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJsaW5lIjogMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImNvbHVtbiI6IDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sZGVySWQ6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJvb3QgZm9sZGVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6IGZvcm1EYXRhLmdldCgnbWVkaWFVcGxvYWQnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQ6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzVXBsb2FkOiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDYuc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICBhc3NldCA9IF9nZXQocmVzdWx0LCAnZGF0YS5hc3NldHMudXBsb2FkLmFzc2V0JywgbnVsbCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFhc3NldCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmFicnVwdCgicmV0dXJuIiwgYXNzZXQudXJsKTsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byB1cGxvYWQgaW1hZ2UnKTsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDE4OwogICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMTQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ2LnQwID0gX2NvbnRleHQ2WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ltYWdlIHVwbG9hZCBlcnJvcjonLCBfY29udGV4dDYudDApOwogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuYWJydXB0KCJyZXR1cm4iLCBudWxsKTsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlNiwgbnVsbCwgW1swLCAxNF1dKTsKICAgICAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgICAgICBmdW5jdGlvbiB1cGxvYWRJbWFnZShfeDIpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3VwbG9hZEltYWdlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgcmV0dXJuIHVwbG9hZEltYWdlOwogICAgICAgICAgICAgICAgfSgpCiAgICAgICAgICAgICAgfSksIExpbmsuY29uZmlndXJlKHsKICAgICAgICAgICAgICAgIG9wZW5PbkNsaWNrOiBmYWxzZSwKICAgICAgICAgICAgICAgIEhUTUxBdHRyaWJ1dGVzOiB7CiAgICAgICAgICAgICAgICAgIGNsYXNzOiAnZWRpdG9yLWxpbmsnCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSksIFRhYmxlLmNvbmZpZ3VyZSh7CiAgICAgICAgICAgICAgICByZXNpemFibGU6IHRydWUKICAgICAgICAgICAgICB9KSwgVGFibGVSb3csIFRhYmxlSGVhZGVyLCBUYWJsZUNlbGwsIFRleHRTdHlsZS5jb25maWd1cmUoewogICAgICAgICAgICAgICAgdHlwZXM6IFsndGV4dFN0eWxlJ10KICAgICAgICAgICAgICB9KSwgQ29sb3IuY29uZmlndXJlKHsKICAgICAgICAgICAgICAgIHR5cGVzOiBbJ3RleHRTdHlsZSddCiAgICAgICAgICAgICAgfSksIEZvbnRGYW1pbHkuY29uZmlndXJlKHsKICAgICAgICAgICAgICAgIHR5cGVzOiBbJ3RleHRTdHlsZSddCiAgICAgICAgICAgICAgfSksIFRleHRBbGlnbi5jb25maWd1cmUoewogICAgICAgICAgICAgICAgdHlwZXM6IFsnaGVhZGluZycsICdwYXJhZ3JhcGgnXQogICAgICAgICAgICAgIH0pLCBIaWdobGlnaHQuY29uZmlndXJlKHsKICAgICAgICAgICAgICAgIG11bHRpY29sb3I6IHRydWUKICAgICAgICAgICAgICB9KSwgU3Vic2NyaXB0LmNvbmZpZ3VyZSgpLCBTdXBlcnNjcmlwdC5jb25maWd1cmUoKSwgVGFza0xpc3QsIFRhc2tJdGVtLmNvbmZpZ3VyZSh7CiAgICAgICAgICAgICAgICBuZXN0ZWQ6IHRydWUKICAgICAgICAgICAgICB9KSwgQ29kZUJsb2NrTG93bGlnaHQuY29uZmlndXJlKHsKICAgICAgICAgICAgICAgIGxvd2xpZ2h0OiBsb3dsaWdodAogICAgICAgICAgICAgIH0pXSwKICAgICAgICAgICAgICBjb250ZW50OiBfdGhpczYuJHN0b3JlLmdldCgnZWRpdG9yL2NvbnRlbnQnKSwKICAgICAgICAgICAgICBhdXRvZm9jdXM6IHRydWUsCiAgICAgICAgICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKF9yZWYzKSB7CiAgICAgICAgICAgICAgICB2YXIgZWRpdG9yID0gX3JlZjMuZWRpdG9yOwogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgdmFyIGh0bWwgPSBlZGl0b3IuZ2V0SFRNTCgpOwogICAgICAgICAgICAgICAgICBfdGhpczYuJHN0b3JlLnNldCgnZWRpdG9yL2NvbnRlbnQnLCBiZWF1dGlmeShodG1sLCB7CiAgICAgICAgICAgICAgICAgICAgaW5kZW50X3NpemU6IDIsCiAgICAgICAgICAgICAgICAgICAgZW5kX3dpdGhfbmV3bGluZTogdHJ1ZQogICAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICAgIF90aGlzNi51cGRhdGVTdGF0cygpOwogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIGVkaXRvciB1cGRhdGU6JywgZXJyKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgLy8gVmVyaWZ5IGVkaXRvciB3YXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkKICAgICAgICAgICAgaWYgKF90aGlzNi5lZGl0b3IpIHsKICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGluaXRpYWxpemUgZWRpdG9yJyk7CiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAvLyBTZXR1cCBzcGVjaWFsIGhhbmRsZXJzIGZvciBzbGFzaCBjb21tYW5kcwogICAgICAgICAgICBfdGhpczYuZWRpdG9yLm9uKCdrZXlkb3duJywgZnVuY3Rpb24gKF9yZWY0KSB7CiAgICAgICAgICAgICAgdmFyIGV2ZW50ID0gX3JlZjQuZXZlbnQ7CiAgICAgICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJy8nICYmICFfdGhpczYuc2xhc2hDb21tYW5kQWN0aXZlKSB7CiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgX3RoaXM2LnRvZ2dsZVNsYXNoQ29tbWFuZCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAvLyBJbml0aWFsIHN0YXRzIHVwZGF0ZQogICAgICAgICAgICBfdGhpczYudXBkYXRlU3RhdHMoKTsKCiAgICAgICAgICAgIC8vIExvYWQgdmVyc2lvbiBoaXN0b3J5IGlmIGF2YWlsYWJsZQogICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDE4OwogICAgICAgICAgICByZXR1cm4gX3RoaXM2LmxvYWRWZXJzaW9uSGlzdG9yeSgpOwogICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgLy8gTWFyayBlZGl0b3IgYXMgcmVhZHkgb25seSBhZnRlciBzdWNjZXNzZnVsIGluaXRpYWxpemF0aW9uCiAgICAgICAgICAgIF90aGlzNi5pc0VkaXRvclJlYWR5ID0gdHJ1ZTsKICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAyNTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICBfY29udGV4dDcucHJldiA9IDIxOwogICAgICAgICAgICBfY29udGV4dDcudDAgPSBfY29udGV4dDdbImNhdGNoIl0oNCk7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluaXRpYWxpemluZyBlZGl0b3I6JywgX2NvbnRleHQ3LnQwKTsKICAgICAgICAgICAgX3RoaXM2LiRzdG9yZS5jb21taXQoJ3Nob3dOb3RpZmljYXRpb24nLCB7CiAgICAgICAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBpbml0aWFsaXplIGVkaXRvcjogJyArIF9jb250ZXh0Ny50MC5tZXNzYWdlLAogICAgICAgICAgICAgIHN0eWxlOiAnZXJyb3InCiAgICAgICAgICAgIH0pOwogICAgICAgICAgY2FzZSAyNToKICAgICAgICAgICAgLy8gU2V0IHVwIGV2ZW50IGxpc3RlbmVycyBmb3IgY29udGVudCBpbnNlcnRpb24KICAgICAgICAgICAgX3RoaXM2LiRyb290LiRvbignZWRpdG9ySW5zZXJ0JywgZnVuY3Rpb24gKG9wdHMpIHsKICAgICAgICAgICAgICBpZiAoIV90aGlzNi5lZGl0b3IgfHwgIV90aGlzNi5pc0VkaXRvclJlYWR5KSByZXR1cm47CiAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIHN3aXRjaCAob3B0cy5raW5kKSB7CiAgICAgICAgICAgICAgICAgIGNhc2UgJ0lNQUdFJzoKICAgICAgICAgICAgICAgICAgICBfdGhpczYuZWRpdG9yLmNoYWluKCkuZm9jdXMoKS5zZXRJbWFnZSh7CiAgICAgICAgICAgICAgICAgICAgICBzcmM6IG9wdHMucGF0aAogICAgICAgICAgICAgICAgICAgIH0pLnJ1bigpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICBjYXNlICdCSU5BUlknOgogICAgICAgICAgICAgICAgICAgIF90aGlzNi5lZGl0b3IuY2hhaW4oKS5mb2N1cygpLnNldExpbmsoewogICAgICAgICAgICAgICAgICAgICAgaHJlZjogb3B0cy5wYXRoCiAgICAgICAgICAgICAgICAgICAgfSkucnVuKCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIGNhc2UgJ0RJQUdSQU0nOgogICAgICAgICAgICAgICAgICAgIF90aGlzNi5lZGl0b3IuY2hhaW4oKS5mb2N1cygpLnNldEltYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHNyYzogImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsIiArIG9wdHMudGV4dAogICAgICAgICAgICAgICAgICAgIH0pLnJ1bigpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICBjYXNlICdJTkZPX0JPWCc6CiAgICAgICAgICAgICAgICAgICAgX3RoaXM2LmVkaXRvci5jaGFpbigpLmZvY3VzKCkuaW5zZXJ0Q29udGVudCh7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaW5mb0JveCcsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvcHRzLnR5cGUgfHwgJ2luZm8nCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgY29udGVudDogW3sKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3BhcmFncmFwaCcKICAgICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgICAgfSkucnVuKCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIGNhc2UgJ0VYUEFORF9DT0xMQVBTRSc6CiAgICAgICAgICAgICAgICAgICAgX3RoaXM2LmVkaXRvci5jaGFpbigpLmZvY3VzKCkuaW5zZXJ0Q29udGVudCh7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZXhwYW5kQ29sbGFwc2UnLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IG9wdHMudGl0bGUgfHwgJ0V4cGFuZC9Db2xsYXBzZScKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBbewogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGFyYWdyYXBoJwogICAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgICAgICB9KS5ydW4oKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluc2VydGluZyBjb250ZW50OicsIGVycik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX3RoaXM2LiRyb290LiRvbignZWRpdG9yTGlua1RvUGFnZScsIGZ1bmN0aW9uIChvcHRzKSB7CiAgICAgICAgICAgICAgX3RoaXM2Lmluc2VydExpbmsoKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAvLyBIYW5kbGUgc2F2ZSBjb25mbGljdAogICAgICAgICAgICBfdGhpczYuJHJvb3QuJG9uKCdzYXZlQ29uZmxpY3QnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgX3RoaXM2LmlzQ29uZmxpY3QgPSB0cnVlOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIC8vIFNldHVwIHBhc3RlIGV2ZW50IGhhbmRsZXJzCiAgICAgICAgICAgIF90aGlzNi5zZXR1cFBhc3RlSGFuZGxlcnMoKTsKICAgICAgICAgIGNhc2UgMjk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU3LCBudWxsLCBbWzQsIDIxXV0pOwogICAgfSkpKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgLy8gQ2xlYW4gdXAgZXZlbnQgbGlzdGVuZXJzCiAgICB0aGlzLiRyb290LiRvZmYoJ2ZvcmNlU2F2ZScsIHRoaXMuZm9yY2VQYWdlU2F2ZSk7CiAgICB0aGlzLiRyb290LiRvZmYoJ292ZXJ3cml0ZUVkaXRvckNvbnRlbnQnLCB0aGlzLnJlbG9hZENvbnRlbnQpOwoKICAgIC8vIERlc3Ryb3kgdGhlIGVkaXRvciBpbnN0YW5jZQogICAgaWYgKHRoaXMuZWRpdG9yKSB7CiAgICAgIHRoaXMuZWRpdG9yLmRlc3Ryb3koKTsKICAgIH0KICB9Cn07"},null]}